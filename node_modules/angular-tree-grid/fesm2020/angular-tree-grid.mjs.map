{"version":3,"file":"angular-tree-grid.mjs","sources":["../../../projects/angular-tree-grid/src/lib/angular-tree-grid.service.ts","../../../projects/angular-tree-grid/src/lib/store/store.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-head/tree-head.component.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-head/tree-head.component.html","../../../projects/angular-tree-grid/src/lib/modules/tree-body/components/filter-row/filter-row.component.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-body/components/filter-row/filter-row.component.html","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/components/tree-cell-editor/default/default-editor.component.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/components/tree-cell-editor/custom/custom-tree-cell-Editor.component.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/components/tree-cell-editor/default/cell-editor/tree-cell-editor.component.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/components/tree-cell-editor/default/cell-editor/tree-cell-editor.component.html","../../../projects/angular-tree-grid/src/lib/pipes/pipe.safehtml.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-body/components/add-row/add-row.component.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-body/components/add-row/add-row.component.html","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/components/tree-cell-actions/tree-cell-actions.component.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/components/tree-cell-actions/tree-cell-actions.component.html","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/components/tree-cell-view/custom/custom-tree-cell.component.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/components/tree-cell-view/default/tree-cell-view.component.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/components/tree-cell-view/default/tree-cell-view.component.html","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/tree-cell.component.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/tree-cell.component.html","../../../projects/angular-tree-grid/src/lib/modules/subgrid/components/subgrid-head/subgrid-head.component.ts","../../../projects/angular-tree-grid/src/lib/modules/subgrid/components/subgrid-head/subgrid-head.component.html","../../../projects/angular-tree-grid/src/lib/modules/subgrid/components/subgrid-body/subgrid-body.component.ts","../../../projects/angular-tree-grid/src/lib/modules/subgrid/components/subgrid-body/subgrid-body.component.html","../../../projects/angular-tree-grid/src/lib/modules/subgrid/subgrid.component.ts","../../../projects/angular-tree-grid/src/lib/modules/subgrid/subgrid.component.html","../../../projects/angular-tree-grid/src/lib/modules/tree-body/tree-body.component.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-body/tree-body.component.html","../../../projects/angular-tree-grid/src/lib/angular-tree-grid.component.ts","../../../projects/angular-tree-grid/src/lib/angular-tree-grid.component.html","../../../projects/angular-tree-grid/src/lib/modules/tree-cell/tree-cell.module.ts","../../../projects/angular-tree-grid/src/lib/modules/subgrid/subgrid.module.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-body/tree-body.module.ts","../../../projects/angular-tree-grid/src/lib/modules/tree-head/tree-head.module.ts","../../../projects/angular-tree-grid/src/lib/angular-tree-grid.module.ts","../../../projects/angular-tree-grid/src/public-api.ts","../../../projects/angular-tree-grid/src/angular-tree-grid.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularTreeGridService {\n\n  private display_data_observable = new Subject<any[]>();\n  display_data_observable$ = this.display_data_observable.asObservable();\n\n  constructor() { }\n\n  updateDisplayDataObservable(display_data: any[]) {\n    this.display_data_observable.next(display_data);\n  }\n\n  findRowIndex(display_data, configs, row_id) {\n    return display_data.map(row => row[configs.id_field]).\n                    indexOf(row_id);\n  }\n\n  selectAll(display_data) {\n    display_data.forEach(data => {\n        data.row_selected = true;\n    });\n  }\n\n  deSelectAll(display_data) {\n    display_data.forEach(data => {\n        data.row_selected = false;\n    });\n  }\n\n  expandAll(expand_tracker) {\n    for (const key in expand_tracker) {\n      if (expand_tracker.hasOwnProperty(key)) {\n        expand_tracker[key] = true;\n      }\n    }\n  }\n\n  collapseAll(expand_tracker) {\n    for (const key in expand_tracker) {\n      if (expand_tracker.hasOwnProperty(key)) {\n        expand_tracker[key] = false;\n      }\n    }\n    expand_tracker[''] = true;\n  }\n\n  expandRow(row_id, expand_tracker, expand_event, suppress_event, configs, display_data, store) {\n    if (configs.subgrid) {\n      this.expandSubgridRow(row_id, expand_tracker, expand_event, suppress_event, configs, display_data, store);\n      return;\n    }\n    const row_index = this.findRowIndex(display_data, configs, row_id);\n\n    const row_data = display_data[row_index];\n    const pathx = row_data.pathx;\n    const parts = pathx.split('.');\n    expand_tracker[row_data.pathx] = true;\n    let expanded_count = 1;\n\n    for (let index = 0; index < display_data.length; index++) {\n      const record = display_data[index];\n\n      // Stop when all rows are expanded.\n      if (expanded_count >= parts.length) {\n        return;\n      }\n\n      // Join paths as we expand.\n      const key = parts.slice(0, expanded_count).join('.');\n\n      // We don't want to expand it's children here.\n      if (record.pathx.indexOf(key) !== -1) {\n          expanded_count += 1;\n          expand_tracker[record.pathx] = true;\n\n          if (!suppress_event) {\n              if (configs.load_children_on_expand) {\n                  this.emitExpandRowEvent(expand_tracker, expand_event,\n                      store, row_data, configs);\n              } else {\n                  expand_event.emit({event: null, data: row_data});\n              }\n          }\n      }\n    }\n  }\n\n  collapseRow(row_id, expand_tracker, collapse_event, suppress_event, configs, display_data) {\n      const row_index = this.findRowIndex(display_data, configs, row_id);\n\n      const row_data = display_data[row_index];\n      const pathx = row_data.pathx;\n      expand_tracker[pathx] = false;\n\n      // Collapse children rows as well\n      display_data.forEach(record => {\n          if (record.pathx.indexOf(pathx) !== -1) {\n              expand_tracker[record.pathx] = 0;\n              if (!suppress_event) {\n                  collapse_event.emit({event: null, data: row_data});\n              }\n          }\n      });\n  }\n\n  emitExpandRowEvent(expand_tracker, expand, store, row_data, configs) {\n    const promise = new Promise((resolve, reject) => {\n      expand.emit({\n        data: row_data,\n        resolve: resolve\n      });\n    });\n\n    expand_tracker[row_data.pathx] = true;\n    store.remove_children(row_data);\n    row_data.is_loading = true;\n\n    // Add Child rows to the table.\n    promise.then((child_rows: any) => {\n      row_data.is_loading = false;\n      store.remove_children(row_data);\n      if (child_rows) {\n        child_rows.map(child => {\n          child.leaf = true;\n          child.levelx = row_data.levelx + 1;\n          child.pathx = row_data.pathx + '.' + child[configs.id_field];\n          child.parent_pathx = row_data.pathx;\n          child[configs.parent_id_field] = row_data[configs.id_field];\n        });\n\n        store.add_children(row_data, child_rows);\n      }\n    }).catch((err) => {});\n  }\n\n  disableRowSelection(display_data, configs, row_id) {\n    const row_index = this.findRowIndex(display_data, configs, row_id);\n    display_data[row_index].selection_disabled = true;\n  }\n\n  enableRowSelection(display_data, configs, row_id) {\n    const row_index = this.findRowIndex(display_data, configs, row_id);\n    display_data[row_index].selection_disabled = false;\n  }\n\n  disableRowExpand(display_data, configs, row_id) {\n    const row_index = this.findRowIndex(display_data, configs, row_id);\n    display_data[row_index].expand_disabled = true;\n  }\n\n  enableRowExpand(display_data, configs, row_id) {\n    const row_index = this.findRowIndex(display_data, configs, row_id);\n    display_data[row_index].expand_disabled = false;\n  }\n\n  expandSubgridRow(row_id, expand_tracker, expand_event, suppress_event, configs, display_data, store) {\n    const row_index = this.findRowIndex(display_data, configs, row_id);\n    const row_data = display_data[row_index];\n    expand_tracker[row_data.pathx] = true;\n\n    if (!suppress_event) {\n      this.emitSubgridExpandRowEvent(expand_tracker, expand_event, store, row_data);\n    }\n  }\n\n  emitSubgridExpandRowEvent(expand_tracker, expand, store, row_data) {\n    const promise = new Promise((resolve, reject) => {\n      expand.emit({\n        data: row_data,\n        resolve: resolve\n      });\n    });\n\n    expand_tracker[row_data.pathx] = true;\n    const blank_row: any = store.showBlankRow(row_data);\n    blank_row.loading_children = true;\n\n    // Add Child rows to the table.\n    promise.then((child_rows: any) => {\n      blank_row.loading_children = false;\n\n      if (child_rows) {\n        child_rows.map(child => {\n          child.leaf = true;\n        });\n        blank_row.children = child_rows;\n      } else {\n\n        // Persist old children. If didn't exist then assign blank array.\n        if (!blank_row.children) {\n          blank_row.children = [];\n        }\n      }\n\n    }).catch((err) => {});\n  }\n\n}\n","import { AngularTreeGridService } from '../angular-tree-grid.service';\nimport { Configs } from '../models/Configs.model';\n\nexport class Store {\n    processed_data: any[];\n    raw_data: any[];\n    display_data: any[];\n    configs: Configs;\n\n    constructor(private angularTreeGridService: AngularTreeGridService) { }\n\n    getRawData() {\n        return this.raw_data;\n    }\n\n    setRawData(raw_data) {\n        this.raw_data = raw_data;\n    }\n\n    getProcessedData() {\n        return this.processed_data;\n    }\n\n    setProcessedData(processed_data) {\n        this.processed_data = processed_data;\n        this.setDisplayData([...processed_data]);\n    }\n\n    getDisplayData() {\n        return this.display_data;\n    }\n\n    setDisplayData(display_data) {\n        this.display_data = display_data;\n        this.angularTreeGridService.updateDisplayDataObservable(this.display_data);\n    }\n\n    /**\n     * Show Blank row for subgrid.\n     *\n     * @param  row_data Row Data\n     * @returns blank_row\n     */\n    showBlankRow(row_data) {\n        const row_index = this.display_data.map(row => row[this.configs.id_field]).\n            indexOf(row_data[this.configs.id_field]);\n\n        let blank_row = this.display_data[row_index + 1];\n        if (!blank_row || blank_row.parent_pathx !== row_data[this.configs.id_field]) {\n            blank_row = {\n                leaf: true,\n                row_selected: true, // By default make it selected as it's never going to be selected manually.\n                parent_pathx: row_data[this.configs.id_field]\n            };\n            blank_row[this.configs.id_field] = -1;\n            this.display_data.splice(row_index + 1, 0, blank_row);\n        }\n\n        return blank_row;\n    }\n\n    remove_children(row_data) {\n        const new_processed_data: any = [];\n\n        for (let index = 0; index < this.processed_data.length; index++) {\n            const element = this.processed_data[index];\n            if (element[this.configs.parent_id_field] !== row_data[this.configs.id_field]) {\n                new_processed_data.push(element);\n            }\n        }\n\n        this.setProcessedData(new_processed_data);\n    }\n\n    add_children(row_data, children) {\n        const row_index = this.processed_data.map(row => row[this.configs.id_field]).\n            indexOf(row_data[this.configs.id_field]);\n        const top_rows = this.processed_data.slice(0, row_index + 1);\n        const bottom_rows = this.processed_data.slice(row_index + 1);\n        this.processed_data = top_rows.concat(children).concat(bottom_rows);\n\n        this.setDisplayData([...this.processed_data]);\n        this.angularTreeGridService.updateDisplayDataObservable(this.display_data);\n    }\n\n    filterBy(columns, search_values) {\n        this.display_data = this.processed_data.filter((record) => {\n            let found = true;\n            for (let index = 0; index < columns.length; index++) {\n                const column = columns[index];\n                let column_value = record[column.name];\n                let search_value = search_values[index];\n\n                // If blank then continue.\n                if (!search_value) {\n                    continue;\n                }\n\n                // Call custom filter function.\n                if (column.filter_function) {\n                    const response = column.filter_function(record, column, column_value, search_value);\n                    if (response === false) {\n                        found = false;\n                    }\n                } else {\n                    if (typeof (column_value) === 'number') {\n                        if (column_value !== parseInt(search_value, 10)) {\n                            found = false;\n                        }\n                    } else {\n                        if (!column.case_sensitive_filter) {\n                            column_value = column_value.toLowerCase();\n                            search_value = search_value.toLowerCase();\n                        }\n                        if (column_value.indexOf(search_value) === -1) {\n                            found = false;\n                        }\n                    }\n                }\n            }\n            return found;\n        });\n        this.angularTreeGridService.updateDisplayDataObservable(this.display_data);\n    }\n\n    findTopParentNode(data, configs) {\n        const ids = data.map(element => element[configs.id_field]);\n        let top_parents = [];\n\n        // Find parents ie if parent_id is not present in ids.\n        data.forEach(element => {\n            if (ids.indexOf(element[configs.parent_id_field]) === -1) {\n                top_parents.push(element[configs.parent_id_field]);\n            }\n        });\n\n        // Remove duplicates\n        top_parents = top_parents.filter(function (item, pos, self) {\n            return self.indexOf(item) === pos;\n        });\n\n        return top_parents;\n    }\n\n    processData(data, expand_tracker, configs: Configs, edit_tracker, internal_configs) {\n        const top_parents = this.findTopParentNode(data, configs);\n        const processed_data = [];\n        internal_configs.top_parents = top_parents;\n\n        data.map(rec => {\n            rec.pathx = [];\n            rec.leaf = false;\n        });\n\n        top_parents.forEach(top_parent => {\n            const children = this.findChildren(data, top_parent, configs);\n\n            this.orderData(data, processed_data, configs, children, [], 0);\n        });\n\n        processed_data.map(rec => {\n            const parent_pathx = rec.parent_pathx;\n            rec.parent_pathx = parent_pathx.join('.');\n            parent_pathx.push(rec[configs.id_field]);\n\n            // Add current id to create current path.\n            rec.pathx = parent_pathx.join('.');\n            edit_tracker[rec[configs.id_field]] = false;\n\n            // For Subgrid feature, expect all rows are expandable.\n            if (configs.subgrid) {\n                rec.leaf = false;\n            }\n        });\n\n        // Expand root.\n        expand_tracker[''] = true;\n        this.setProcessedData(processed_data);\n        this.setRawData(data);\n        this.configs = configs;\n    }\n\n    findChildren(data, id, configs) {\n        return data.filter(rec => rec[configs.parent_id_field] === id);\n    }\n\n    orderData(data, processed_data, configs, parents, paths, levelx) {\n        parents.forEach(parent => {\n            const children = this.findChildren(data, parent[configs.id_field], configs);\n\n            if (children.length === 0) {\n                parent.leaf = true;\n                parent.levelx = levelx;\n                parent.parent_pathx = [...paths];\n                processed_data.push(parent);\n            } else {\n                parent.parent_pathx = [...paths];\n                parent.levelx = levelx;\n                processed_data.push(parent);\n\n                const newPaths = [...paths, parent[configs.id_field]];\n                this.orderData(data, processed_data, configs, children, newPaths, levelx + 1);\n            }\n\n        });\n    }\n\n    refreshDisplayData() {\n        this.display_data = this.processed_data;\n        this.angularTreeGridService.updateDisplayDataObservable(this.display_data);\n    }\n}\n","import { Component, OnInit, Input, EventEmitter } from '@angular/core';\nimport { Configs } from '../../models/Configs.model';\nimport { Column } from '../../models/Column.model';\nimport { Store } from '../../store/store';\nimport { AngularTreeGridService } from '../../angular-tree-grid.service';\n\n@Component({\n  selector: '[db-tree-head]',\n  templateUrl: './tree-head.component.html',\n  styleUrls: ['./tree-head.component.scss']\n})\nexport class TreeHeadComponent implements OnInit {\n\n  @Input()\n  store: Store;\n\n  @Input()\n  configs: Configs;\n\n  @Input()\n  expand_tracker: any;\n\n  @Input()\n  edit_tracker: any;\n\n  @Input()\n  internal_configs: any;\n\n  @Input()\n  columns: Column[];\n\n  @Input()\n  rowselectall: EventEmitter<any>;\n\n  @Input()\n  rowdeselectall: EventEmitter<any>;\n\n  constructor(private angularTreeGridService: AngularTreeGridService) { }\n\n  ngOnInit() {}\n\n  addRow() {\n    this.internal_configs.show_add_row = true;\n  }\n\n  selectAll(e) {\n    if (e.target.checked) {\n      this.angularTreeGridService.selectAll(this.store.getDisplayData());\n      this.rowselectall.emit(this.store.getDisplayData());\n    } else {\n      this.angularTreeGridService.deSelectAll(this.store.getDisplayData());\n      this.rowdeselectall.emit(e);\n    }\n  }\n\n}\n","<ng-container *ngIf=\"configs\">\n  <tr [ngClass]=\"configs.css.header_class\">\n    <th *ngIf=\"configs.multi_select\" class=\"checkbox_column\">\n      <input\n        type=\"checkbox\"\n        (click)=\"selectAll($event)\"\n        [checked]=\"this.internal_configs.all_selected\"\n      />\n    </th>\n    <th\n      *ngIf=\"\n        configs.actions.add || configs.actions.edit || configs.actions.delete\n      \"\n      class=\"action-column\"\n      width=\"{{ configs.action_column_width }}\"\n      (click)=\"addRow()\"\n    >\n      <span class=\"icon-container\">\n        <span\n          *ngIf=\"\n            !internal_configs.show_add_row &&\n            configs.actions.add &&\n            configs.css.add_icon.length > 0\n          \"\n          [innerHTML]=\"configs.css.add_icon | safeHtml\"\n          title=\"Add a row\"\n        ></span>\n        <span\n          *ngIf=\"\n            !internal_configs.show_add_row &&\n            configs.actions.add &&\n            configs.css.add_icon.length == 0\n          \"\n          title=\"Add a row\"\n          class=\"inbuild-icon\"\n          >+</span\n        >\n      </span>\n      <span *ngIf=\"internal_configs.show_add_row || !configs.actions.add\"\n        >Actions</span\n      >\n    </th>\n    <th\n      *ngFor=\"let column of columns\"\n      [ngClass]=\"{ 'column-hide': column.hidden }\"\n      [attr.width]=\"column.width\"\n    >\n      <div\n        [innerHTML]=\"\n          column.header_renderer\n            ? column.header_renderer(column.header)\n            : column.header\n        \"\n      ></div>\n    </th>\n    <th\n      *ngIf=\"\n        (configs.show_parent_on_edit && internal_configs.show_parent_col) ||\n        internal_configs.show_add_row\n      \"\n    >\n      Parent\n    </th>\n  </tr>\n</ng-container>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Column } from '../../../../models/Column.model';\nimport { Configs } from '../../../../models/Configs.model';\nimport { Store } from '../../../../store/store';\nimport { AngularTreeGridService } from '../../../../angular-tree-grid.service';\n\n@Component({\n  selector: '[db-filter-row]',\n  templateUrl: './filter-row.component.html',\n  styleUrls: ['./filter-row.component.scss']\n})\nexport class FilterRowComponent implements OnInit {\n  search_values: any = {};\n\n  @Input()\n  store: Store;\n\n  @Input()\n  columns: Column[];\n\n  @Input()\n  expand_tracker: any;\n\n  @Input()\n  configs: Configs;\n\n  @Input()\n  internal_configs: any;\n\n  constructor(private angularTreeGridService: AngularTreeGridService) { }\n\n  ngOnInit() {\n    this.columns.forEach(column => {\n      this.search_values[column.name] = '';\n    });\n  }\n\n  filter() {\n    this.store.filterBy(this.columns, Object.values(this.search_values));\n\n    // Don't expand for subgrid.\n    if (!this.configs.subgrid) {\n      this.angularTreeGridService.expandAll(this.expand_tracker);\n    }\n  }\n\n}\n","<td *ngIf=\"configs.multi_select\"></td>\n<td *ngIf=\"(configs.actions.edit || configs.actions.delete || configs.actions.add)\"></td>\n<td *ngFor=\"let column of columns\">\n  <div *ngIf=\"column.filter\">\n    <input type=\"text\" (keyup)=\"filter()\" [(ngModel)]=\"search_values[column.name]\">\n  </div>\n</td>\n<!-- Add column to fix UI issue when add row is enabled or Edit is enabled -->\n<td *ngIf=\"internal_configs.show_add_row || (internal_configs.show_parent_col && configs.show_parent_on_edit)\"></td>","import { Output, EventEmitter, Component } from '@angular/core';\n\n@Component({\n    selector: '',\n    template: '',\n})\nexport class DefaultEditor implements Editor {\n    @Output() canceledit = new EventEmitter<any>();\n    @Output() editcomplete = new EventEmitter<any>();\n    @Output() cellclick = new EventEmitter<any>();\n}\n\nexport interface Editor {\n    canceledit: EventEmitter<any>;\n    editcomplete: EventEmitter<any>;\n    cellclick: EventEmitter<any>;\n}\n","import {\n    Component,\n    Input,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n    OnInit,\n    OnDestroy,\n} from '@angular/core';\nimport { Column } from '../../../../../models/Column.model';\nimport { DefaultEditor } from '../default/default-editor.component';\n\n@Component({\n    selector: 'db-custom-cell-editor-component',\n    template: `\n      <ng-template #customView></ng-template>\n    `,\n})\nexport class CustomCellEditorComponent extends DefaultEditor implements OnInit, OnDestroy {\n    custom_component: any;\n    @Input() column: Column;\n    @Input() cell_value;\n    @Input() row_data;\n    @ViewChild('customView', { read: ViewContainerRef, static: true }) custom_view: any;\n\n    constructor(private resolver: ComponentFactoryResolver) {\n      super();\n    }\n\n    ngOnInit() {\n      if (this.column.editor && !this.custom_component) {\n        this.createCustomComponent();\n        this.callOnComponentInit();\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.custom_component) {\n        this.custom_component.destroy();\n      }\n    }\n\n    protected createCustomComponent() {\n      const componentFactory = this.resolver.resolveComponentFactory(this.column.editor);\n      this.custom_component = this.custom_view.createComponent(componentFactory);\n    }\n\n    protected callOnComponentInit() {\n      this.column.on_component_init && this.column.on_component_init(this.custom_component.instance);\n\n      this.custom_component.instance.cell_value = this.cell_value;\n      this.custom_component.instance.row_data = this.row_data;\n      this.custom_component.instance.column = this.column;\n\n      this.custom_component.instance.editcomplete.subscribe((event) => this.editcomplete.emit(event));\n      this.custom_component.instance.canceledit.subscribe((event) => this.canceledit.emit(event));\n      this.custom_component.instance.cellclick.subscribe((event) => this.cellclick.emit(event));\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Column } from '../../../../../../models/Column.model';\nimport { DefaultEditor } from '../default-editor.component';\n\n@Component({\n  selector: 'db-tree-cell-editor',\n  templateUrl: './tree-cell-editor.component.html',\n  styleUrls: ['./tree-cell-editor.component.scss']\n})\nexport class TreeCellEditorComponent extends DefaultEditor implements OnInit {\n  @Input()\n  cell_value: string;\n\n  @Input()\n  row_data: any;\n\n  @Input()\n  column: Column;\n\n  @Input()\n  expandable_column: boolean;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<input type=\"text\" \n    [(ngModel)]=\"row_data[column.name]\" \n    [ngClass]=\"{'cell-default': true, 'expandable-editor': expandable_column}\"\n    (click)=\"cellclick.emit($event)\"\n    (keydown.enter)=\"editcomplete.emit($event)\"\n    (keydown.esc)=\"canceledit.emit()\"\n    size=\"1\"\n    >","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Pipe({name: 'safeHtml'})\nexport class SafeHtmlPipe implements PipeTransform {\n    constructor(private sanitized: DomSanitizer) {\n    }\n    transform(value: string) {\n        return this.sanitized.bypassSecurityTrustHtml(value);\n    }\n}","import { Component, OnInit, Output, EventEmitter, Input, ViewEncapsulation } from '@angular/core';\nimport { Column } from '../../../../models/Column.model';\nimport { Configs } from '../../../../models/Configs.model';\nimport { Store } from '../../../../store/store';\n\n@Component({\n  selector: '[db-add-row]',\n  templateUrl: './add-row.component.html',\n  styleUrls: ['./add-row.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AddRowComponent implements OnInit {\n  raw_data: any[];\n  row_data: any = {};\n  parents: any[] = [];\n  show_add_row: boolean;\n\n  @Input()\n  store: Store;\n\n  @Input()\n  columns: Column[];\n\n  @Input()\n  configs: Configs;\n\n  @Input()\n  internal_configs: any;\n\n  @Output() rowadd: EventEmitter<any> = new EventEmitter();\n  @Output() canceledit: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    this.raw_data = this.store.getRawData();\n    this.columns.forEach(column => {\n      this.row_data[column.name] = '';\n    });\n    this.parents = this.raw_data.map(\n      element => {\n        return {\n          'id': element[this.configs.id_field],\n          'value': element[this.configs.parent_display_field]\n        };\n      }\n    );\n  }\n\n  saveAddRecord(e) {\n    this.raw_data.push(this.row_data);\n    this.rowadd.emit(this.row_data);\n  }\n\n  cancelAddEdit() {\n    this.internal_configs.show_add_row = false;\n  }\n\n}\n","<td *ngIf=\"configs.multi_select\"></td>\n<td>\n  <div class=\"icon-container\">\n    <span\n      (click)=\"saveAddRecord($event)\"\n      *ngIf=\"configs.css.save_icon\"\n      title=\"Save row\"\n      [innerHTML]=\"this.configs.css.save_icon | safeHtml\"\n    ></span>\n    <svg\n      (click)=\"saveAddRecord($event)\"\n      title=\"Save row\"\n      *ngIf=\"!configs.css.save_icon\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n    >\n      <title>Save row</title>\n      <g data-name=\"Layer 2\">\n        <g data-name=\"save\">\n          <rect width=\"24\" height=\"24\" opacity=\"0\" />\n          <path\n            d=\"M20.12 8.71l-4.83-4.83A3 3 0 0 0 13.17 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3v-7.17a3 3 0 0 0-.88-2.12zM10 19v-2h4v2zm9-1a1 1 0 0 1-1 1h-2v-3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h2v5a1 1 0 0 0 1 1h4a1 1 0 0 0 0-2h-3V5h3.17a1.05 1.05 0 0 1 .71.29l4.83 4.83a1 1 0 0 1 .29.71z\"\n          />\n        </g>\n      </g>\n    </svg>\n  </div>\n  <div class=\"icon-container\">\n    <span\n      (click)=\"cancelAddEdit()\"\n      *ngIf=\"configs.css.cancel_icon\"\n      title=\"Cancel row\"\n      [innerHTML]=\"this.configs.css.cancel_icon | safeHtml\"\n    ></span>\n    <svg\n      (click)=\"cancelAddEdit()\"\n      *ngIf=\"!configs.css.cancel_icon\"\n      title=\"Cancel row\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n    >\n      <title>Cancel row</title>\n      <g data-name=\"Layer 2\">\n        <g data-name=\"close\">\n          <rect\n            width=\"24\"\n            height=\"24\"\n            transform=\"rotate(180 12 12)\"\n            opacity=\"0\"\n          />\n          <path\n            d=\"M13.41 12l4.3-4.29a1 1 0 1 0-1.42-1.42L12 10.59l-4.29-4.3a1 1 0 0 0-1.42 1.42l4.3 4.29-4.3 4.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4.29-4.3 4.29 4.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z\"\n          />\n        </g>\n      </g>\n    </svg>\n  </div>\n</td>\n<td *ngFor=\"let column of columns\" [ngClass]=\"{ 'column-hide': column.hidden }\">\n  <div *ngIf=\"column.editable\">\n    <db-custom-cell-editor-component\n      *ngIf=\"column.editor\"\n      [cell_value]=\"\"\n      [column]=\"column\"\n      [row_data]=\"row_data\"\n      (canceledit)=\"cancelAddEdit()\"\n      (editcomplete)=\"saveAddRecord($event)\"\n    >\n    </db-custom-cell-editor-component>\n    <db-tree-cell-editor\n      *ngIf=\"!column.editor\"\n      [cell_value]=\"\"\n      [row_data]=\"row_data\"\n      [column]=\"column\"\n      (canceledit)=\"cancelAddEdit()\"\n      (editcomplete)=\"saveAddRecord($event)\"\n    >\n    </db-tree-cell-editor>\n  </div>\n</td>\n<td>\n  <select [(ngModel)]=\"row_data[configs.parent_id_field]\">\n    <option *ngFor=\"let parent of parents\" [value]=\"parent.id\">\n      {{ parent.value }}\n    </option>\n  </select>\n</td>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Configs } from '../../../../models/Configs.model';\nimport { Store } from '../../../../store/store';\n\n@Component({\n  selector: '[db-tree-cell-actions]',\n  templateUrl: './tree-cell-actions.component.html',\n  styleUrls: ['./tree-cell-actions.component.scss']\n})\nexport class TreeCellActionsComponent implements OnInit {\n  display_data: any;\n\n  @Input()\n  store: Store;\n\n  @Input()\n  edit_tracker: any;\n\n  @Input()\n  internal_configs: any;\n\n  @Input()\n  configs: Configs;\n\n  @Input()\n  rowdelete: EventEmitter<any>;\n\n  @Input()\n  row_data: any;\n\n  @Output() editcomplete: EventEmitter<any> = new EventEmitter();\n  @Output() canceledit: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    this.display_data = this.store.getDisplayData();\n  }\n\n  enableEdit(index, row_data) {\n\n    //Cancel all previous edits.\n    for (const id in this.edit_tracker) {\n      this.edit_tracker[id] = false;\n    }\n    \n    this.edit_tracker[index] = true;\n\n    // Only if edit_parent is true.\n    if (this.configs.actions.edit_parent) {\n      this.internal_configs.show_parent_col = true;\n    }\n    this.internal_configs.current_edited_row = {...row_data};\n  }\n\n  findRecordIndex(pathx: number) {\n    for (const index in this.store.processed_data) {\n      if (this.store.processed_data[index].pathx === pathx) {\n        return Number(index);\n      }\n    }\n  }\n\n  deleteRecord(rec) {\n    const index: number = this.findRecordIndex(rec.pathx);\n    if (this.configs.actions.resolve_delete) {\n      const promise = new Promise((resolve, reject) => {\n        this.rowdelete.emit({\n          data: rec,\n          resolve: resolve\n        });\n      });\n\n      promise.then(() => {\n        this.store.processed_data.splice(index, 1);\n        this.store.refreshDisplayData();\n      }).catch((err) => {});\n    } else {\n      this.store.processed_data.splice(index, 1);\n      this.store.refreshDisplayData();\n      this.rowdelete.emit(rec);\n    }\n  }\n\n  saveRecord($event) {\n    this.editcomplete.emit({event: $event, data: this.row_data});\n  }\n\n}\n","<ng-container\n  *ngIf=\"configs.actions.edit && configs.row_edit_function(row_data)\"\n>\n  <div *ngIf=\"!edit_tracker[row_data[configs.id_field]]\" class=\"icon-container\">\n    <span\n      (click)=\"enableEdit(row_data[configs.id_field], row_data)\"\n      *ngIf=\"configs.css.edit_icon\"\n      title=\"Edit row\"\n      [innerHTML]=\"this.configs.css.edit_icon | safeHtml\"\n    ></span>\n    <svg\n      (click)=\"enableEdit(row_data[configs.id_field], row_data)\"\n      *ngIf=\"!configs.css.edit_icon\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n    >\n      <title>Edit row</title>\n      <g data-name=\"Layer 2\">\n        <g data-name=\"edit\">\n          <rect width=\"24\" height=\"24\" opacity=\"0\" />\n          <path\n            d=\"M19.4 7.34L16.66 4.6A2 2 0 0 0 14 4.53l-9 9a2 2 0 0 0-.57 1.21L4 18.91a1 1 0 0 0 .29.8A1 1 0 0 0 5 20h.09l4.17-.38a2 2 0 0 0 1.21-.57l9-9a1.92 1.92 0 0 0-.07-2.71zM9.08 17.62l-3 .28.27-3L12 9.32l2.7 2.7zM16 10.68L13.32 8l1.95-2L18 8.73z\"\n          />\n        </g>\n      </g>\n    </svg>\n  </div>\n  <ng-container *ngIf=\"edit_tracker[row_data[configs.id_field]]\">\n    <div class=\"icon-container\">\n      <span\n        (click)=\"saveRecord($event)\"\n        *ngIf=\"configs.css.save_icon\"\n        title=\"Save row\"\n        [innerHTML]=\"this.configs.css.save_icon | safeHtml\"\n      ></span>\n      <svg\n        (click)=\"saveRecord($event)\"\n        title=\"Save row\"\n        *ngIf=\"!configs.css.save_icon\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n      >\n        <title>Save row</title>\n        <g data-name=\"Layer 2\">\n          <g data-name=\"save\">\n            <rect width=\"24\" height=\"24\" opacity=\"0\" />\n            <path\n              d=\"M20.12 8.71l-4.83-4.83A3 3 0 0 0 13.17 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3v-7.17a3 3 0 0 0-.88-2.12zM10 19v-2h4v2zm9-1a1 1 0 0 1-1 1h-2v-3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h2v5a1 1 0 0 0 1 1h4a1 1 0 0 0 0-2h-3V5h3.17a1.05 1.05 0 0 1 .71.29l4.83 4.83a1 1 0 0 1 .29.71z\"\n            />\n          </g>\n        </g>\n      </svg>\n    </div>\n    <div class=\"icon-container\">\n      <span\n        (click)=\"canceledit.emit(row_data)\"\n        *ngIf=\"configs.css.cancel_icon\"\n        title=\"Cancel row\"\n        [innerHTML]=\"this.configs.css.cancel_icon | safeHtml\"\n      ></span>\n      <svg\n        (click)=\"canceledit.emit(row_data)\"\n        *ngIf=\"!configs.css.cancel_icon\"\n        title=\"Cancel row\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n      >\n        <title>Cancel row</title>\n        <g data-name=\"Layer 2\">\n          <g data-name=\"close\">\n            <rect\n              width=\"24\"\n              height=\"24\"\n              transform=\"rotate(180 12 12)\"\n              opacity=\"0\"\n            />\n            <path\n              d=\"M13.41 12l4.3-4.29a1 1 0 1 0-1.42-1.42L12 10.59l-4.29-4.3a1 1 0 0 0-1.42 1.42l4.3 4.29-4.3 4.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4.29-4.3 4.29 4.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z\"\n            />\n          </g>\n        </g>\n      </svg>\n    </div>\n  </ng-container>\n</ng-container>\n<div\n  class=\"icon-container\"\n  *ngIf=\"\n    configs.actions.delete &&\n    !edit_tracker[row_data[configs.id_field]] &&\n    configs.row_delete_function(row_data)\n  \"\n>\n  <span\n    *ngIf=\"configs.css.delete_icon\"\n    title=\"Delete row\"\n    (click)=\"deleteRecord(row_data)\"\n    [innerHTML]=\"this.configs.css.delete_icon | safeHtml\"\n  ></span>\n  <svg\n    *ngIf=\"!configs.css.delete_icon\"\n    title=\"Delete row\"\n    (click)=\"deleteRecord(row_data)\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n  >\n    <title>Delete row</title>\n    <g data-name=\"Layer 2\">\n      <g data-name=\"trash-2\">\n        <rect width=\"24\" height=\"24\" opacity=\"0\" />\n        <path\n          d=\"M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 4.33c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4zM18 19a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V8h12z\"\n        />\n        <path d=\"M9 17a1 1 0 0 0 1-1v-4a1 1 0 0 0-2 0v4a1 1 0 0 0 1 1z\" />\n        <path d=\"M15 17a1 1 0 0 0 1-1v-4a1 1 0 0 0-2 0v4a1 1 0 0 0 1 1z\" />\n      </g>\n    </g>\n  </svg>\n</div>\n","import {\n    Component,\n    Input,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n    OnInit,\n    OnDestroy,\n} from '@angular/core';\nimport { Column } from '../../../../../models/Column.model';\n\n@Component({\n    selector: 'db-custom-cell-component',\n    template: `\n      <ng-template #customView></ng-template>\n    `,\n})\nexport class CustomCellViewComponent implements OnInit, OnDestroy {\n    custom_component: any;\n    @Input() column: Column;\n    @Input() row_data;\n    @ViewChild('customView', { read: ViewContainerRef, static: true }) custom_view: any;\n\n    constructor(private resolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n      if (this.column.component && !this.custom_component) {\n        this.createCustomComponent();\n        this.callOnComponentInit();\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.custom_component) {\n        this.custom_component.destroy();\n      }\n    }\n\n    protected createCustomComponent() {\n      const componentFactory = this.resolver.resolveComponentFactory(this.column.component);\n      this.custom_component = this.custom_view.createComponent(componentFactory);\n    }\n\n    protected callOnComponentInit() {\n      this.column.on_component_init && this.column.on_component_init(this.custom_component.instance);\n\n      this.custom_component.instance.cell_value = this.row_data[this.column.name];\n      this.custom_component.instance.row_data = this.row_data;\n      this.custom_component.instance.column = this.column;\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Column } from '../../../../../models/Column.model';\n\n@Component({\n  selector: 'db-tree-cell-view',\n  templateUrl: './tree-cell-view.component.html',\n  styleUrls: ['./tree-cell-view.component.scss']\n})\nexport class TreeCellViewComponent implements OnInit {\n  @Input()\n  column: Column;\n\n  @Input()\n  row_data: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<span [innerHTML]=\"column.renderer ? column.renderer(row_data[column.name], row_data) : row_data[column.name]\"></span>\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Column } from '../../models/Column.model';\nimport { Configs } from '../../models/Configs.model';\n\n@Component({\n  selector: 'db-tree-cell',\n  templateUrl: './tree-cell.component.html',\n  styleUrls: ['./tree-cell.component.scss']\n})\nexport class TreeCellComponent implements OnInit {\n  is_expand_column: boolean;\n  show_expand_icon: boolean;\n  cell_value: string;\n  @Input()\n  configs: Configs;\n\n  @Input()\n  index: number;\n\n  @Input()\n  row_data: any;\n\n  @Input()\n  column: Column;\n\n  @Input()\n  expand_tracker: any;\n\n  @Input()\n  cellclick: EventEmitter<any>;\n\n  @Input()\n  edit_on: boolean;\n\n  @Output() rowexpand: EventEmitter<any> = new EventEmitter();\n  @Output() rowcollapse: EventEmitter<any> = new EventEmitter();\n  @Output() canceledit: EventEmitter<any> = new EventEmitter();\n  @Output() editcomplete: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    this.is_expand_column = this.index === 0;\n    this.show_expand_icon = !this.row_data.leaf;\n\n    // If user mentions a node as leaf.\n    if (this.configs.load_children_on_expand) {\n      this.show_expand_icon = !this.row_data.leaf_node;\n    }\n    this.cell_value = this.row_data[this.column.name];\n  }\n\n  expandRow(event) {\n    if (this.index === 0 && (!this.row_data.leaf || this.configs.load_children_on_expand)) {\n      this.rowexpand.emit({event: event, data: this.row_data});\n      event.stopPropagation();\n    }\n  }\n\n  collapseRow(event) {\n    if (this.index === 0 && (!this.row_data.leaf || this.configs.load_children_on_expand)) {\n      this.rowcollapse.emit({event: event, data: this.row_data});\n      event.stopPropagation();\n    }\n  }\n\n  onCellClick(event) {\n    this.cellclick.emit({column: this.column, row: this.row_data, event: event});\n  }\n\n  onEditComplete($event) {\n    this.editcomplete.emit({event: $event, data: this.row_data});\n  }\n\n}\n","<div (click)=\"onCellClick($event)\">\n  <ng-container *ngIf=\"is_expand_column\">\n    <div\n      [ngStyle]=\"{\n        'padding-left': row_data.leaf\n          ? row_data.levelx * 20 + 'px'\n          : row_data.levelx * 10 + 'px'\n      }\"\n    >\n      <span\n        class=\"no-expand-icon\"\n        *ngIf=\"row_data.levelx == 0 && row_data.leaf\"\n      ></span>\n      <ng-container *ngIf=\"!expand_tracker[row_data.pathx]\">\n        <span (click)=\"expandRow($event)\" class=\"expand-icon-container\">\n          <span\n            class=\"expand-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.expand_icon.length > 0\"\n            [innerHTML]=\"configs.css.expand_icon | safeHtml\"\n          ></span>\n          <span\n            class=\"expand-icon inbuild-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.expand_icon.length == 0\"\n            >+</span\n          >\n        </span>\n      </ng-container>\n      <ng-container *ngIf=\"expand_tracker[row_data.pathx]\">\n        <span *ngIf=\"row_data.is_loading\" class=\"childred-loader\"></span>\n        <span (click)=\"collapseRow($event)\" *ngIf=\"!row_data.is_loading\" class=\"expand-icon-container\">\n          <span\n            class=\"expand-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.collapse_icon.length > 0\"\n            [innerHTML]=\"configs.css.collapse_icon | safeHtml\"\n          ></span>\n          <span\n            class=\"expand-icon inbuild-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.collapse_icon.length == 0\"\n            >-</span\n          >\n        </span>\n      </ng-container>\n      <ng-container\n        *ngIf=\"!edit_on || !column.editable\"\n        [ngSwitch]=\"column.type\"\n      >\n        <db-custom-cell-component\n          *ngSwitchCase=\"'custom'\"\n          [column]=\"column\"\n          [row_data]=\"row_data\"\n        >\n        </db-custom-cell-component>\n        <db-tree-cell-view\n          *ngSwitchDefault\n          [column]=\"column\"\n          [row_data]=\"row_data\"\n        >\n        </db-tree-cell-view>\n      </ng-container>\n      <ng-container *ngIf=\"edit_on && column.editable\">\n        <db-custom-cell-editor-component\n          *ngIf=\"column.editor\"\n          [cell_value]=\"cell_value\"\n          [column]=\"column\"\n          [row_data]=\"row_data\"\n          (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n          (editcomplete)=\"onEditComplete($event)\"\n        >\n        </db-custom-cell-editor-component>\n        <db-tree-cell-editor\n          *ngIf=\"!column.editor\"\n          [cell_value]=\"cell_value\"\n          [row_data]=\"row_data\"\n          [column]=\"column\"\n          [expandable_column]=\"true\"\n          (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n          (editcomplete)=\"onEditComplete($event)\"\n        >\n        </db-tree-cell-editor>\n      </ng-container>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!is_expand_column\">\n    <ng-container *ngIf=\"!edit_on || !column.editable\" [ngSwitch]=\"column.type\">\n      <db-custom-cell-component\n        *ngSwitchCase=\"'custom'\"\n        [column]=\"column\"\n        [row_data]=\"row_data\"\n      >\n      </db-custom-cell-component>\n      <db-tree-cell-view\n        *ngSwitchDefault\n        [column]=\"column\"\n        [row_data]=\"row_data\"\n      >\n      </db-tree-cell-view>\n    </ng-container>\n\n    <ng-container *ngIf=\"edit_on && column.editable\">\n      <db-custom-cell-editor-component\n        *ngIf=\"column.editor\"\n        [cell_value]=\"cell_value\"\n        [column]=\"column\"\n        [row_data]=\"row_data\"\n        (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n        (editcomplete)=\"onEditComplete($event)\"\n      >\n      </db-custom-cell-editor-component>\n      <db-tree-cell-editor\n        *ngIf=\"!column.editor\"\n        [cell_value]=\"cell_value\"\n        [row_data]=\"row_data\"\n        [column]=\"column\"\n        [expandable_column]=\"false\"\n        (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n        (editcomplete)=\"onEditComplete($event)\"\n      >\n      </db-tree-cell-editor>\n    </ng-container>\n  </ng-container>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Configs } from '../../../../models/Configs.model';\n\n@Component({\n  selector: '[db-subgrid-head]',\n  templateUrl: './subgrid-head.component.html',\n  styleUrls: ['./subgrid-head.component.scss']\n})\nexport class SubgridHeadComponent implements OnInit {\n  @Input()\n  configs: Configs;\n\n  @Input()\n  row_data: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  sortColumn(row_data, column) {\n    const sort_by = column.name;\n\n    // If already sorted then reverse.\n    column.sort_type = column.sorted ? !column.sort_type : 1;\n    column.sorted = 1;\n\n    column.sort_type ? row_data.children.sort((a, b) => (a[sort_by] > b[sort_by]) ? 1 : ((b[sort_by] > a[sort_by]) ? -1 : 0)) :\n      row_data.children.sort((a, b) => (a[sort_by] < b[sort_by]) ? 1 : ((b[sort_by] < a[sort_by]) ? -1 : 0));\n  }\n\n}\n","<tr>\n  <th *ngFor=\"let column of configs.subgrid_config.columns\"\n    (click)=\"sortColumn(row_data, column)\" width=\"{{column.width ? column.width : 'auto'}}\"\n    [ngClass]=\"{'sorted': column.sorted,'sortable': column.sortable, 'column-hide': column.hidden}\">\n    {{column.header}}\n    <span *ngIf=\"column.sortable\" [ngClass]=\"column.sorted && column.sort_type == 0?'arrow-down active':'arrow-down'\"></span>\n    <span *ngIf=\"column.sortable\" [ngClass]=\"column.sorted && column.sort_type == 1?'arrow-up active':'arrow-up'\"></span>\n  </th>\n</tr>","import { Component, OnInit, Input, EventEmitter } from '@angular/core';\nimport { Configs } from '../../../../models/Configs.model';\n\n@Component({\n  selector: '[db-subgrid-body]',\n  templateUrl: './subgrid-body.component.html',\n  styleUrls: ['./subgrid-body.component.scss']\n})\nexport class SubgridBodyComponent implements OnInit {\n  @Input()\n  configs: Configs;\n\n  @Input()\n  expand_tracker: any;\n\n  @Input()\n  row_data: any;\n\n  @Input()\n  cellclick: EventEmitter<any>;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ng-container *ngIf=\"row_data.loading_children\">\n  <tr>\n    <td [attr.colspan]=\"configs.subgrid_config.columns.length\" \n      [innerHTML]=\"configs.subgrid_config.data_loading_text\"\n      class=\"subgrid-loading-text\"></td>\n  </tr>\n</ng-container>\n<ng-container *ngIf=\"!row_data.loading_children\">\n  <tr *ngFor=\"let child_data of row_data.children\">\n    <td *ngFor=\"let column of configs.subgrid_config.columns; index as i\">\n      <db-tree-cell\n        [configs]=\"configs\"\n        [column]=\"column\"\n        [index]=\"1\"\n        [row_data]=\"child_data\"\n        [expand_tracker]=\"expand_tracker\"\n        [cellclick]=\"cellclick\"\n      ></db-tree-cell>\n    </td>\n  </tr>\n  <tr *ngIf=\"configs.subgrid_config.show_summary_row\">\n    <td *ngFor=\"let column of configs.subgrid_config.columns\">\n      <div [innerHTML]=\"column.summary_renderer && column.summary_renderer(row_data.children)\"></div>\n    </td>\n  </tr>\n</ng-container>","import { Component, OnInit, Input, EventEmitter } from '@angular/core';\nimport { Store } from '../../store/store';\nimport { Configs } from '../../models/Configs.model';\n\n@Component({\n  selector: '[db-subgrid]',\n  templateUrl: './subgrid.component.html',\n  styleUrls: ['./subgrid.component.scss']\n})\nexport class SubgridComponent implements OnInit {\n\n  @Input()\n  store: Store;\n\n  @Input()\n  configs: Configs;\n\n  @Input()\n  expand_tracker: any;\n\n  @Input()\n  edit_tracker: any;\n\n  @Input()\n  internal_configs: any;\n\n  @Input()\n  row_data: any;\n\n  @Input()\n  cellclick: EventEmitter<any>;\n\n  @Input()\n  expand: EventEmitter<any>;\n\n  @Input()\n  rowselect: EventEmitter<any>;\n\n  @Input()\n  rowdeselect: EventEmitter<any>;\n\n  @Input()\n  rowsave: EventEmitter<any>;\n\n  @Input()\n  rowdelete: EventEmitter<any>;\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  saveRecord($event) {\n    const element = $event.data;\n\n    if (this.configs.actions.resolve_edit) {\n      const promise = new Promise((resolve, reject) => {\n        this.rowsave.emit({\n          data: element,\n          resolve: resolve\n        });\n      });\n\n      promise.then(() => {\n        this.checkAndRefreshData(element);\n      }).catch((err) => {});\n    } else {\n      this.checkAndRefreshData(element);\n      this.rowsave.emit(element);\n    }\n  }\n\n  checkAndRefreshData(element) {\n    this.edit_tracker[element[this.configs.id_field]] = false;\n    this.internal_configs.show_parent_col = false;\n\n    // Only refresh if Parent has been changed.\n    if (this.internal_configs.current_edited_row[this.configs.parent_id_field]\n      !== element[this.configs.parent_id_field]) {\n        this.refreshData(element);\n    }\n  }\n\n  refreshData(element) {\n    // If edit parent is not true then don't refresh.\n    if (!this.configs.actions.edit_parent) {\n      return;\n    }\n    element[this.configs.parent_id_field] = parseInt(element[this.configs.parent_id_field], 10);\n    this.expand_tracker = {};\n    this.edit_tracker = {};\n    this.store.processData(\n      this.store.getRawData(),\n      this.expand_tracker,\n      this.configs,\n      this.edit_tracker,\n      this.internal_configs\n    );\n  }\n\n  cancelEdit(row_data) {\n    const index = row_data[this.configs.id_field];\n\n    // Cancel all changes ie copy from back up.\n    Object.assign(row_data, this.internal_configs.current_edited_row);\n\n    this.edit_tracker[index] = false;\n    this.internal_configs.show_parent_col = false;\n  }\n\n  onRowExpand(event) {\n    const row_data = event.data;\n\n    const promise = new Promise((resolve, reject) => {\n      this.expand.emit({\n        data: row_data,\n        resolve: resolve\n      });\n    });\n\n    this.expand_tracker[row_data.pathx] = true;\n    const blank_row: any = this.store.showBlankRow(row_data);\n    blank_row.loading_children = true;\n\n    // Add Child rows to the table.\n    promise.then((child_rows: any) => {\n      blank_row.loading_children = false;\n\n      if (child_rows) {\n        child_rows.map(child => {\n          child.leaf = true;\n        });\n        blank_row.children = child_rows;\n      } else {\n\n        // Persist old children. If didn't exist then assign blank array.\n        if (!blank_row.children) {\n          blank_row.children = [];\n        }\n      }\n\n    }).catch((err) => {});\n  }\n\n  onRowCollapse(event) {\n    const row_data = event.data;\n    this.expand_tracker[row_data.pathx] = false;\n  }\n\n  selectRowOnCheck(row_data, event) {\n    if (event.target.checked) {\n      row_data.row_selected = true;\n      this.rowselect.emit({data: row_data, event: event});\n    } else {\n      row_data.row_selected = false;\n      this.rowdeselect.emit({data: row_data, event: event});\n    }\n\n    this.setSelectAllConfig();\n  }\n\n  /**\n   * Set Select All config on Select change.\n   *\n   */\n  setSelectAllConfig() {\n    let select_all = true;\n\n    this.store.getDisplayData().forEach(data => {\n      if (!data.row_selected) {\n        select_all = false;\n      }\n    });\n\n    this.internal_configs.all_selected = select_all;\n\n  }\n\n}\n","<ng-container *ngIf=\"expand_tracker[row_data.parent_pathx]\">\n\n  <!-- Expandable Row -->\n  <ng-container *ngIf=\"!row_data.leaf\">\n    <td *ngIf=\"configs.multi_select\" class=\"checkbox_column\">\n      <input type=\"checkbox\" [checked]=\"row_data.row_selected\" (click)=\"selectRowOnCheck(row_data, $event)\" \n        [attr.disabled]=\"row_data.selection_disabled\">\n    </td>\n    <td db-tree-cell-actions \n      *ngIf=\"(configs.actions.edit || configs.actions.delete || configs.actions.add)\"\n      [row_data]=\"row_data\"\n      [configs]=\"configs\"\n      [store]=\"store\"\n      [edit_tracker]=\"edit_tracker\"\n      [internal_configs]=\"internal_configs\"\n      [rowdelete]=\"rowdelete\"\n      (canceledit)=\"cancelEdit($event)\" \n      (editcomplete)=\"saveRecord($event)\"\n      >\n    </td>\n    <td *ngFor=\"let column of configs.columns; index as i\" \n      [ngClass]=\"{'column-hide': column.hidden, 'expand-column': i == 0}\">\n      <db-tree-cell\n        [configs]=\"configs\"\n        [column]=\"column\"\n        [index]=\"i\"\n        [row_data]=\"row_data\"\n        [expand_tracker]=\"expand_tracker\"\n        [edit_on]=\"edit_tracker[row_data[configs.id_field]]\"\n        [cellclick]=\"cellclick\"\n        (rowexpand)=\"onRowExpand($event)\"\n        (rowcollapse)=\"onRowCollapse($event)\"\n        (editcomplete)=\"saveRecord($event)\"\n      >\n      </db-tree-cell>\n    </td>\n  </ng-container>\n\n  <!-- Subgrid Rows -->\n  <ng-container *ngIf=\"row_data.leaf\">    \n    <td *ngIf=\"configs.multi_select\"></td>\n    <td *ngIf=\"(configs.actions.edit || configs.actions.delete || configs.actions.add)\"></td>\n    <td [attr.colspan]=\"configs.columns.length\" class=\"subgrid-column\">\n        <table class=\"subgrid-table\">\n          <thead db-subgrid-head\n            [row_data]=\"row_data\"\n            [configs]=\"configs\">\n            \n          </thead>\n          <tbody db-subgrid-body\n            [configs]=\"configs\"\n            [expand_tracker]=\"expand_tracker\"\n            [cellclick]=\"cellclick\"\n            [row_data]=\"row_data\">\n          </tbody>            \n        </table>\n    </td>    \n  </ng-container>  \n</ng-container>","import { Component, OnInit, Input, EventEmitter } from '@angular/core';\nimport { Configs } from '../../models/Configs.model';\nimport { Column } from '../../models/Column.model';\nimport { AngularTreeGridService } from '../../angular-tree-grid.service';\nimport { Store } from '../../store/store';\n\n@Component({\n  selector: '[db-tree-body]',\n  templateUrl: './tree-body.component.html',\n  styleUrls: ['./tree-body.component.scss']\n})\nexport class TreeBodyComponent implements OnInit {\n  parents: any[] = [];\n  raw_data: any[];\n  display_data: any[];\n\n  @Input()\n  store: Store;\n\n  @Input()\n  configs: Configs;\n\n  @Input()\n  expand_tracker: any;\n\n  @Input()\n  edit_tracker: any;\n\n  @Input()\n  internal_configs: any;\n\n  @Input()\n  columns: Column[];\n\n  @Input()\n  cellclick: EventEmitter<any>;\n\n  @Input()\n  expand: EventEmitter<any>;\n\n  @Input()\n  collapse: EventEmitter<any>;\n\n  @Input()\n  rowdelete: EventEmitter<any>;\n\n  @Input()\n  rowsave: EventEmitter<any>;\n\n  @Input()\n  rowadd: EventEmitter<any>;\n\n  @Input()\n  rowselect: EventEmitter<any>;\n\n  @Input()\n  rowdeselect: EventEmitter<any>;\n\n  constructor(private angularTreeGridService: AngularTreeGridService) {\n  }\n\n  ngOnInit() {\n    this.display_data = this.store.getDisplayData();\n    this.angularTreeGridService.display_data_observable$.subscribe((store) => {\n      this.display_data = this.store.getDisplayData();\n      this.setParents();\n    });\n    this.setParents();\n\n  }\n\n  setParents() {\n    this.parents = this.store.raw_data.map(\n      element => {\n        return {\n          'id': element[this.configs.id_field],\n          'value': element[this.configs.parent_display_field]\n        };\n      }\n    );\n  }\n\n  refreshData(element) {\n    // If edit parent is not true then don't refresh.\n    if (!this.configs.actions.edit_parent) {\n      return;\n    }\n    element[this.configs.parent_id_field] = parseInt(element[this.configs.parent_id_field], 10);\n    this.expand_tracker = {};\n    this.edit_tracker = {};\n    this.store.processData(\n      this.store.getRawData(),\n      this.expand_tracker,\n      this.configs,\n      this.edit_tracker,\n      this.internal_configs\n    );\n  }\n\n  onRowExpand(event) {\n    const row_data = event.data;\n\n    if (!this.configs.load_children_on_expand) {\n      this.expand_tracker[row_data.pathx] = true;\n      this.expand.emit(event);\n    } else {\n      this.angularTreeGridService.emitExpandRowEvent(this.expand_tracker, this.expand, this.store, row_data, this.configs);\n    }\n  }\n\n  onRowCollapse(event) {\n    const row_data = event.data;\n    this.expand_tracker[row_data.pathx] = false;\n\n    // Collapse all of its children.\n    const keys = Object.keys(this.expand_tracker);\n    keys.forEach(key => {\n      if (key.indexOf(row_data.pathx) !== -1) {\n        this.expand_tracker[key] = 0;\n      }\n    });\n\n    this.collapse.emit(event);\n  }\n\n  saveRecord($event) {\n    const element = $event.data;\n\n    if (this.configs.actions.resolve_edit) {\n      const promise = new Promise((resolve, reject) => {\n        this.rowsave.emit({\n          data: element,\n          resolve: resolve\n        });\n      });\n\n      promise.then(() => {\n        this.checkAndRefreshData(element);\n      }).catch((err) => {});\n    } else {\n      this.checkAndRefreshData(element);\n      this.rowsave.emit(element);\n    }\n  }\n\n  checkAndRefreshData(element) {\n    this.edit_tracker[element[this.configs.id_field]] = false;\n    this.internal_configs.show_parent_col = false;\n\n    // Only refresh if Parent has been changed.\n    if (this.internal_configs.current_edited_row[this.configs.parent_id_field]\n      !== element[this.configs.parent_id_field]) {\n        this.refreshData(element);\n    }\n  }\n\n  addRow(element) {\n    if (this.configs.actions.resolve_add) {\n      const promise = new Promise((resolve, reject) => {\n        this.rowadd.emit({\n          data: element,\n          resolve: resolve\n        });\n      });\n\n      promise.then(() => {\n        this.internal_configs.show_add_row = false;\n        this.refreshData(element);\n      }).catch((err) => {});\n    } else {\n      this.refreshData(element);\n      this.internal_configs.show_add_row = false;\n      this.rowadd.emit(element);\n    }\n  }\n\n  cancelEdit(row_data) {\n    const index = row_data[this.configs.id_field];\n\n    // Cancel all changes ie copy from back up.\n    Object.assign(row_data, this.internal_configs.current_edited_row);\n\n    this.edit_tracker[index] = false;\n    this.internal_configs.show_parent_col = false;\n  }\n\n  selectRow(row_data, event) {\n\n    // Don't run if Multi select is enabled.\n    if (this.configs.multi_select) {\n      return;\n    }\n\n    this.store.getDisplayData().forEach(data => {\n      data.row_selected = false;\n    });\n    row_data.row_selected = true;\n    this.rowselect.emit({data: row_data, event: event});\n  }\n\n  selectRowOnCheck(row_data, event) {\n    if (event.target.checked) {\n      row_data.row_selected = true;\n      this.rowselect.emit({data: row_data, event: event});\n    } else {\n      row_data.row_selected = false;\n      this.rowdeselect.emit({data: row_data, event: event});\n    }\n\n    this.setSelectAllConfig();\n  }\n\n  /**\n   * Set Select All config on Select change.\n   *\n   */\n  setSelectAllConfig() {\n    let select_all = true;\n\n    this.store.getDisplayData().forEach(data => {\n      if (!data.row_selected) {\n        select_all = false;\n      }\n    });\n\n    this.internal_configs.all_selected = select_all;\n\n  }\n\n}\n","<ng-container *ngIf=\"configs\">\n<tr *ngIf=\"store.raw_data.length==0\">\n  <td [innerHTML]=\"configs.data_loading_text\" [attr.colspan]=\"columns.length + 1\" style=\"text-align: center\"></td>\n</tr>\n<tr db-filter-row \n  [columns]=\"columns\" \n  [configs]=\"configs\"\n  [store]=\"store\"\n  [internal_configs]=\"internal_configs\" \n  *ngIf=\"configs.filter\"\n  [expand_tracker]=\"expand_tracker\"\n  [ngClass]=\"configs.css.row_filter_class\">\n</tr>\n<tr db-add-row \n  [columns]=\"columns\" \n  [configs]=\"configs\" \n  [internal_configs]=\"internal_configs\" \n  [store]=\"store\"\n  (rowadd)=\"addRow($event)\"\n  *ngIf=\"internal_configs.show_add_row\"\n  [ngClass]=\"configs.row_class_function()\">\n</tr>\n<ng-container *ngIf=\"configs.subgrid\">\n  <tr db-subgrid\n  *ngFor=\"let row_data of display_data\"\n  class=\"subgrid-row\"\n  [configs]=\"configs\" \n  [internal_configs]=\"internal_configs\" \n  [expand_tracker]=\"expand_tracker\" \n  [edit_tracker]=\"edit_tracker\" \n  [store]=\"store\"\n  [row_data]=\"row_data\"\n  [cellclick]=\"cellclick\"\n  [rowselect]=\"rowselect\"\n  [rowdeselect]=\"rowdeselect\"\n  [expand]=\"expand\"\n  [rowsave]=\"rowsave\"\n  [rowdelete]=\"rowdelete\"\n  >\n\n  </tr>\n</ng-container>\n<ng-container *ngIf=\"!configs.subgrid\">\n  <tr \n  *ngFor=\"let row_data of display_data\"\n  [attr.class]=\"configs.row_class_function(row_data) + ' ' + (row_data.row_selected ? configs.css.row_selection_class : '')\"\n  (click)=\"selectRow(row_data, $event)\" \n  >  \n  <ng-container *ngIf=\"expand_tracker[row_data.parent_pathx]\">\n    <td *ngIf=\"configs.multi_select\" class=\"checkbox_column\">\n      <input type=\"checkbox\" [checked]=\"row_data.row_selected\" (click)=\"selectRowOnCheck(row_data, $event)\" \n        [attr.disabled]=\"row_data.selection_disabled\">\n    </td>\n    <td db-tree-cell-actions \n      *ngIf=\"(configs.actions.edit || configs.actions.delete || configs.actions.add)\"\n      [row_data]=\"row_data\"\n      [configs]=\"configs\"\n      [store]=\"store\"\n      [edit_tracker]=\"edit_tracker\"\n      [internal_configs]=\"internal_configs\"\n      [rowdelete]=\"rowdelete\"\n      (canceledit)=\"cancelEdit($event)\" \n      (editcomplete)=\"saveRecord($event)\">\n    </td>\n    <td *ngFor=\"let column of columns; index as i\" \n    class=\"{{column.css_class}}\"\n    [ngClass]=\"{'column-hide': column.hidden, 'expand-column': i == 0}\">\n      <db-tree-cell\n        [configs]=\"configs\"\n        [column]=\"column\"\n        [index]=\"i\"\n        [row_data]=\"row_data\"\n        [expand_tracker]=\"expand_tracker\"\n        [edit_on]=\"edit_tracker[row_data[configs.id_field]]\"\n        [cellclick]=\"cellclick\"\n        (rowexpand)=\"onRowExpand($event)\"\n        (rowcollapse)=\"onRowCollapse($event)\"\n        (editcomplete)=\"saveRecord($event)\"\n      >\n      </db-tree-cell>\n    </td>\n    <td *ngIf=\"configs.show_parent_on_edit && internal_configs.show_parent_col\">\n      <select *ngIf=\"edit_tracker[row_data[configs.id_field]]\" \n        [(ngModel)]=\"row_data[configs.parent_id_field]\">\n        <option *ngFor=\"let parent of parents\" [value]=\"parent.id\">{{parent.value}}</option>\n      </select>\n    </td>    \n\n    <!-- Add column to fix UI issue when add row is enabled but don't show when edit is enabled for the row -->\n    <td *ngIf=\"internal_configs.show_add_row && !(internal_configs.show_parent_col && configs.show_parent_on_edit)\"></td>\n  </ng-container>\n</tr>\n<tr *ngIf=\"configs.show_summary_row\">\n  <td *ngIf=\"configs.multi_select\"></td>\n  <td *ngIf=\"(configs.actions.edit || configs.actions.delete || configs.actions.add)\"></td>\n  <td *ngFor=\"let column of configs.columns\">\n    <div [innerHTML]=\"column.summary_renderer && column.summary_renderer(display_data)\"></div>\n  </td>\n</tr>\n</ng-container>\n\n</ng-container>\n","import { Component, OnChanges, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Configs } from './models/Configs.model';\nimport { AngularTreeGridService } from './angular-tree-grid.service';\nimport { Column } from './models/Column.model';\nimport { Store } from './store/store';\n\n@Component({\n  selector: 'db-angular-tree-grid',\n  templateUrl: 'angular-tree-grid.component.html',\n  styleUrls: ['./angular-tree-grid.component.scss']\n})\nexport class AngularTreeGridComponent implements OnChanges, OnInit {\n  processed_data: any[] = [];\n  expand_tracker: any = {};\n  columns: Column[] = [];\n  edit_tracker: any = {}; // Track Edit options.\n  internal_configs: any = {\n    show_add_row: false,\n    show_parent_col: false,\n    all_selected: false\n  };\n  store = new Store(this.angularTreeGridService);\n\n  @Input()\n  data: any[];\n\n  @Input()\n  configs: Configs;\n\n  default_configs: Configs = {\n    css: {\n      expand_icon: '',\n      collapse_icon: '',\n      add_icon: '',\n      edit_icon: '',\n      delete_icon: '',\n      save_icon: '',\n      cancel_icon: '',\n      row_selection_class: 'selected',\n      header_class: '',\n      row_filter_class: '',\n      table_class: ''\n    },\n    actions: {\n      edit: false,\n      add: false,\n      delete: false,\n      resolve_edit: false,\n      resolve_add: false,\n      resolve_delete: false,\n      edit_parent: false\n    },\n    data_loading_text: 'Loading...',\n    filter: false,\n    multi_select: false,\n    show_parent_on_edit: true,\n    show_summary_row: false,\n    subgrid: false,\n    load_children_on_expand: false,\n    action_column_width: '60px',\n    row_class_function: () => '',\n    row_edit_function: () => true,\n    row_delete_function: () => true,\n    subgrid_config: {\n      show_summary_row: false,\n      data_loading_text: 'Loading...'\n    }\n  };\n  default_column_config: Column = {\n    sorted: 0,\n    sort_type: null,\n    editable: false,\n    hidden: false,\n    filter: true,\n    case_sensitive_filter: false\n  };\n\n   @Output() cellclick: EventEmitter<any> = new EventEmitter();\n   @Output() expand: EventEmitter<any> = new EventEmitter();\n   @Output() collapse: EventEmitter<any> = new EventEmitter();\n   @Output() rowselect: EventEmitter<any> = new EventEmitter();\n   @Output() rowdeselect: EventEmitter<any> = new EventEmitter();\n   @Output() rowselectall: EventEmitter<any> = new EventEmitter();\n   @Output() rowdeselectall: EventEmitter<any> = new EventEmitter();\n   @Output() rowadd: EventEmitter<any> = new EventEmitter();\n   @Output() rowsave: EventEmitter<any> = new EventEmitter();\n   @Output() rowdelete: EventEmitter<any> = new EventEmitter();\n\n  constructor(private angularTreeGridService: AngularTreeGridService) { }\n\n  ngOnInit() {\n    if (!this.validateConfigs()) {\n      return;\n    }\n    this.setDefaultConfigs();\n    this.setColumnNames();\n  }\n\n  ngOnChanges() {\n    if (!this.validateConfigs()) {\n      return;\n    }\n    this.setDefaultConfigs();\n    this.setColumnNames();\n    this.store.processData(\n      this.data,\n      this.expand_tracker,\n      this.configs,\n      this.edit_tracker,\n      this.internal_configs\n    );\n  }\n\n  validateConfigs() {\n    if (!this.data) {\n      window.console.warn('data can\\'t be empty!');\n      return;\n    }\n    if (!this.configs) {\n      window.console.warn('configs can\\'t be empty!');\n      return;\n    }\n    const element = this.data[0];\n    let isValidated = true;\n\n    if (!this.configs.id_field) {\n      isValidated = false;\n      window.console.error('id field is mandatory!');\n    }\n\n    if (!this.configs.parent_id_field && !this.configs.subgrid) {\n      isValidated = false;\n      window.console.error('parent_id field is mandatory!');\n    }\n\n    if (element && !element.hasOwnProperty(this.configs.id_field)) {\n      isValidated = false;\n      console.error('id_field doesn\\'t exist!');\n    }\n\n    if (element && !element.hasOwnProperty(this.configs.parent_id_field)\n        && !this.configs.subgrid\n        && !this.configs.load_children_on_expand) {\n      isValidated = false;\n      console.error('parent_id_field doesn\\'t exist!');\n    }\n\n    if (element && !element.hasOwnProperty(this.configs.parent_display_field)) {\n      isValidated = false;\n      console.error('parent_display_field doesn\\'t exist! Basically this field will be expanded.');\n    }\n\n    if (this.configs.subgrid && !this.configs.subgrid_config) {\n      isValidated = false;\n      console.error('subgrid_config doesn\\'t exist!');\n    }\n\n    if (this.configs.subgrid && this.configs.subgrid_config && !this.configs.subgrid_config.id_field) {\n      isValidated = false;\n      console.error('id_field of subgrid doesn\\'t exist!');\n    }\n\n    if (this.configs.subgrid && this.configs.subgrid_config && !this.configs.subgrid_config.columns) {\n      isValidated = false;\n      console.error('columns of subgrid doesn\\'t exist!');\n    }\n\n    return isValidated;\n  }\n\n  setDefaultConfigs() {\n    this.processed_data = [];\n    this.configs = Object.assign({}, this.default_configs, this.configs);\n\n    // Deep clone.\n    this.configs.actions = Object.assign({}, this.default_configs.actions, this.configs.actions);\n    this.configs.css = Object.assign({}, this.default_configs.css, this.configs.css);\n    this.configs.subgrid_config = Object.assign({}, this.default_configs.subgrid_config, this.configs.subgrid_config);\n\n    if (this.configs.subgrid) {\n      this.configs.actions.add = false;\n    }\n  }\n\n  setColumnNames() {\n    this.columns = this.configs.columns ? this.configs.columns : [];\n\n    // If columns doesn't exist in user's object.\n    if (!this.configs.columns) {\n      const column_keys = Object.keys(this.data[0]);\n\n      // Insert Header and default configuration.\n      column_keys.forEach(key => {\n        this.columns.push(Object.assign({'header': key, 'name': key}, this.default_column_config));\n      });\n    } else {\n\n      // Insert Header and default configuration.\n      for (let i = 0; i < this.columns.length; i++) {\n        this.columns[i] = Object.assign({}, this.default_column_config, this.columns[i]);\n      }\n    }\n  }\n\n  collapseAll() {\n    this.angularTreeGridService.collapseAll(this.expand_tracker);\n  }\n\n  expandAll() {\n    this.angularTreeGridService.expandAll(this.expand_tracker);\n  }\n\n  selectAll() {\n    this.angularTreeGridService.selectAll(this.store.getDisplayData());\n    this.internal_configs.all_selected = true;\n  }\n\n  deSelectAll() {\n    this.angularTreeGridService.deSelectAll(this.store.getDisplayData());\n    this.internal_configs.all_selected = false;\n  }\n\n  expandRow(row_id, suppress_event?: false) {\n    this.angularTreeGridService.expandRow(row_id, this.expand_tracker, this.expand, suppress_event,\n         this.configs, this.store.getDisplayData(), this.store);\n  }\n\n  collapseRow(row_id, suppress_event?: false) {\n    this.angularTreeGridService.collapseRow(row_id, this.expand_tracker, this.collapse, suppress_event,\n      this.configs, this.store.getDisplayData());\n  }\n\n  disableRowSelection(row_id) {\n    this.angularTreeGridService.disableRowSelection(this.store.getDisplayData(), this.configs, row_id);\n  }\n\n  enableRowSelection(row_id) {\n    this.angularTreeGridService.enableRowSelection(this.store.getDisplayData(), this.configs, row_id);\n  }\n\n  disableRowExpand(row_id) {\n    this.angularTreeGridService.disableRowExpand(this.store.getDisplayData(), this.configs, row_id);\n  }\n\n  enableRowExpand(row_id) {\n    this.angularTreeGridService.enableRowExpand(this.store.getDisplayData(), this.configs, row_id);\n  }\n\n}\n","<table [attr.class]=\"'db-tree-view ' + configs.css.table_class\" >\n    <thead \n        db-tree-head\n        [store]=\"store\"\n        [expand_tracker]=\"expand_tracker\"\n        [internal_configs]=\"internal_configs\"\n        [edit_tracker]=\"edit_tracker\"\n        [rowselectall]=\"rowselectall\"\n        [rowdeselectall]=\"rowdeselectall\"\n        [columns]=\"columns\"\n        [configs]=\"configs\">\n    </thead>\n\n    <tbody \n        db-tree-body\n        [store]=\"store\"\n        [expand_tracker]=\"expand_tracker\"\n        [edit_tracker]=\"edit_tracker\"\n        [internal_configs]=\"internal_configs\"\n        [columns]=\"columns\"\n        [configs]=\"configs\"\n        [cellclick]=\"cellclick\"\n        [expand]=\"expand\"\n        [collapse]=\"collapse\"\n        [rowdelete]=\"rowdelete\"\n        [rowsave]=\"rowsave\"\n        [rowadd]=\"rowadd\"\n        [rowselect]=\"rowselect\"\n        [rowdeselect]=\"rowdeselect\"\n    >        \n    </tbody>\n</table>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreeCellComponent } from './tree-cell.component';\nimport { TreeCellViewComponent } from './components/tree-cell-view/default/tree-cell-view.component';\nimport { CustomCellViewComponent } from './components/tree-cell-view/custom/custom-tree-cell.component';\nimport { TreeCellActionsComponent } from './components/tree-cell-actions/tree-cell-actions.component';\nimport { CustomCellEditorComponent } from './components/tree-cell-editor/custom/custom-tree-cell-Editor.component';\nimport { TreeCellEditorComponent } from './components/tree-cell-editor/default/cell-editor/tree-cell-editor.component';\nimport { FormsModule } from '@angular/forms';\nimport { SafeHtmlPipe } from '../../pipes/pipe.safehtml';\n\n@NgModule({\n  declarations: [\n    TreeCellComponent,\n    TreeCellViewComponent,\n    CustomCellViewComponent,\n    TreeCellActionsComponent,\n    CustomCellEditorComponent,\n    TreeCellEditorComponent,\n    SafeHtmlPipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    TreeCellComponent,\n    CustomCellViewComponent,\n    CustomCellEditorComponent,\n    TreeCellEditorComponent,\n    TreeCellActionsComponent,\n    SafeHtmlPipe\n  ]\n})\nexport class TreeCellModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubgridComponent } from './subgrid.component';\nimport { TreeCellModule } from '../tree-cell/tree-cell.module';\nimport { SubgridHeadComponent } from './components/subgrid-head/subgrid-head.component';\nimport { SubgridBodyComponent } from './components/subgrid-body/subgrid-body.component';\n\n@NgModule({\n  declarations: [SubgridComponent, SubgridHeadComponent, SubgridBodyComponent],\n  imports: [\n    CommonModule,\n    TreeCellModule\n  ],\n  exports: [SubgridComponent]\n})\nexport class SubgridModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreeBodyComponent } from './tree-body.component';\nimport { TreeCellModule } from '../tree-cell/tree-cell.module';\nimport { FormsModule } from '@angular/forms';\nimport { AddRowComponent } from './components/add-row/add-row.component';\nimport { FilterRowComponent } from './components/filter-row/filter-row.component';\nimport { SubgridModule } from '../subgrid/subgrid.module';\n\n@NgModule({\n  declarations: [TreeBodyComponent, AddRowComponent, FilterRowComponent],\n  imports: [\n    CommonModule,\n    TreeCellModule,\n    FormsModule,\n    SubgridModule\n  ],\n  exports: [TreeBodyComponent]\n})\nexport class TreeBodyModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreeHeadComponent } from './tree-head.component';\n\n@NgModule({\n  declarations: [TreeHeadComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [TreeHeadComponent]\n})\nexport class TreeHeadModule { }\n","import { NgModule } from '@angular/core';\nimport { AngularTreeGridComponent } from './angular-tree-grid.component';\nimport { CommonModule } from '@angular/common';\nimport { TreeBodyModule } from './modules/tree-body/tree-body.module';\nimport { TreeHeadModule } from './modules/tree-head/tree-head.module';\n\n@NgModule({\n  declarations: [AngularTreeGridComponent],\n  imports: [\n    CommonModule,\n    TreeBodyModule,\n    TreeHeadModule\n  ],\n  exports: [AngularTreeGridComponent]\n})\nexport class AngularTreeGridModule { }\n\nexport {DefaultEditor} from './modules/tree-cell/components/tree-cell-editor/default/default-editor.component';\n","/*\n * Public API Surface of angular-tree-grid\n */\n\nexport * from './lib/angular-tree-grid.service';\nexport * from './lib/angular-tree-grid.component';\nexport * from './lib/angular-tree-grid.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}