import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../angular-tree-grid.service";
import * as i2 from "@angular/common";
export class TreeHeadComponent {
    constructor(angularTreeGridService) {
        this.angularTreeGridService = angularTreeGridService;
    }
    ngOnInit() { }
    addRow() {
        this.internal_configs.show_add_row = true;
    }
    selectAll(e) {
        if (e.target.checked) {
            this.angularTreeGridService.selectAll(this.store.getDisplayData());
            this.rowselectall.emit(this.store.getDisplayData());
        }
        else {
            this.angularTreeGridService.deSelectAll(this.store.getDisplayData());
            this.rowdeselectall.emit(e);
        }
    }
}
TreeHeadComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: TreeHeadComponent, deps: [{ token: i1.AngularTreeGridService }], target: i0.ɵɵFactoryTarget.Component });
TreeHeadComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.1", type: TreeHeadComponent, selector: "[db-tree-head]", inputs: { store: "store", configs: "configs", expand_tracker: "expand_tracker", edit_tracker: "edit_tracker", internal_configs: "internal_configs", columns: "columns", rowselectall: "rowselectall", rowdeselectall: "rowdeselectall" }, ngImport: i0, template: "<ng-container *ngIf=\"configs\">\n  <tr [ngClass]=\"configs.css.header_class\">\n    <th *ngIf=\"configs.multi_select\" class=\"checkbox_column\">\n      <input\n        type=\"checkbox\"\n        (click)=\"selectAll($event)\"\n        [checked]=\"this.internal_configs.all_selected\"\n      />\n    </th>\n    <th\n      *ngIf=\"\n        configs.actions.add || configs.actions.edit || configs.actions.delete\n      \"\n      class=\"action-column\"\n      width=\"{{ configs.action_column_width }}\"\n      (click)=\"addRow()\"\n    >\n      <span class=\"icon-container\">\n        <span\n          *ngIf=\"\n            !internal_configs.show_add_row &&\n            configs.actions.add &&\n            configs.css.add_icon.length > 0\n          \"\n          [innerHTML]=\"configs.css.add_icon | safeHtml\"\n          title=\"Add a row\"\n        ></span>\n        <span\n          *ngIf=\"\n            !internal_configs.show_add_row &&\n            configs.actions.add &&\n            configs.css.add_icon.length == 0\n          \"\n          title=\"Add a row\"\n          class=\"inbuild-icon\"\n          >+</span\n        >\n      </span>\n      <span *ngIf=\"internal_configs.show_add_row || !configs.actions.add\"\n        >Actions</span\n      >\n    </th>\n    <th\n      *ngFor=\"let column of columns\"\n      [ngClass]=\"{ 'column-hide': column.hidden }\"\n      [attr.width]=\"column.width\"\n    >\n      <div\n        [innerHTML]=\"\n          column.header_renderer\n            ? column.header_renderer(column.header)\n            : column.header\n        \"\n      ></div>\n    </th>\n    <th\n      *ngIf=\"\n        (configs.show_parent_on_edit && internal_configs.show_parent_col) ||\n        internal_configs.show_add_row\n      \"\n    >\n      Parent\n    </th>\n  </tr>\n</ng-container>\n", styles: [".db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}tr{border-bottom:1px solid #cdd5dc;background:#fff}tr th{font-size:1rem;font-weight:600;line-height:1.25;color:#181818;vertical-align:middle;position:relative;box-sizing:border-box}tr th div{padding:.5rem}tr th.column-hide{display:none}tr th.action-column span.icon-container{cursor:pointer}tr th span.inbuild-icon{font-size:25px}th.clear-left-border{border-left:0!important}th.clear-right-border{border-right:0!important}.column-hide{display:none}svg{width:25px;padding-right:3px}\n"], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: TreeHeadComponent, decorators: [{
            type: Component,
            args: [{ selector: '[db-tree-head]', template: "<ng-container *ngIf=\"configs\">\n  <tr [ngClass]=\"configs.css.header_class\">\n    <th *ngIf=\"configs.multi_select\" class=\"checkbox_column\">\n      <input\n        type=\"checkbox\"\n        (click)=\"selectAll($event)\"\n        [checked]=\"this.internal_configs.all_selected\"\n      />\n    </th>\n    <th\n      *ngIf=\"\n        configs.actions.add || configs.actions.edit || configs.actions.delete\n      \"\n      class=\"action-column\"\n      width=\"{{ configs.action_column_width }}\"\n      (click)=\"addRow()\"\n    >\n      <span class=\"icon-container\">\n        <span\n          *ngIf=\"\n            !internal_configs.show_add_row &&\n            configs.actions.add &&\n            configs.css.add_icon.length > 0\n          \"\n          [innerHTML]=\"configs.css.add_icon | safeHtml\"\n          title=\"Add a row\"\n        ></span>\n        <span\n          *ngIf=\"\n            !internal_configs.show_add_row &&\n            configs.actions.add &&\n            configs.css.add_icon.length == 0\n          \"\n          title=\"Add a row\"\n          class=\"inbuild-icon\"\n          >+</span\n        >\n      </span>\n      <span *ngIf=\"internal_configs.show_add_row || !configs.actions.add\"\n        >Actions</span\n      >\n    </th>\n    <th\n      *ngFor=\"let column of columns\"\n      [ngClass]=\"{ 'column-hide': column.hidden }\"\n      [attr.width]=\"column.width\"\n    >\n      <div\n        [innerHTML]=\"\n          column.header_renderer\n            ? column.header_renderer(column.header)\n            : column.header\n        \"\n      ></div>\n    </th>\n    <th\n      *ngIf=\"\n        (configs.show_parent_on_edit && internal_configs.show_parent_col) ||\n        internal_configs.show_add_row\n      \"\n    >\n      Parent\n    </th>\n  </tr>\n</ng-container>\n", styles: [".db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}tr{border-bottom:1px solid #cdd5dc;background:#fff}tr th{font-size:1rem;font-weight:600;line-height:1.25;color:#181818;vertical-align:middle;position:relative;box-sizing:border-box}tr th div{padding:.5rem}tr th.column-hide{display:none}tr th.action-column span.icon-container{cursor:pointer}tr th span.inbuild-icon{font-size:25px}th.clear-left-border{border-left:0!important}th.clear-right-border{border-right:0!important}.column-hide{display:none}svg{width:25px;padding-right:3px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.AngularTreeGridService }]; }, propDecorators: { store: [{
                type: Input
            }], configs: [{
                type: Input
            }], expand_tracker: [{
                type: Input
            }], edit_tracker: [{
                type: Input
            }], internal_configs: [{
                type: Input
            }], columns: [{
                type: Input
            }], rowselectall: [{
                type: Input
            }], rowdeselectall: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1oZWFkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItdHJlZS1ncmlkL3NyYy9saWIvbW9kdWxlcy90cmVlLWhlYWQvdHJlZS1oZWFkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItdHJlZS1ncmlkL3NyYy9saWIvbW9kdWxlcy90cmVlLWhlYWQvdHJlZS1oZWFkLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFnQixNQUFNLGVBQWUsQ0FBQzs7OztBQVd2RSxNQUFNLE9BQU8saUJBQWlCO0lBMEI1QixZQUFvQixzQkFBOEM7UUFBOUMsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF3QjtJQUFJLENBQUM7SUFFdkUsUUFBUSxLQUFJLENBQUM7SUFFYixNQUFNO1FBQ0osSUFBSSxDQUFDLGdCQUFnQixDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7SUFDNUMsQ0FBQztJQUVELFNBQVMsQ0FBQyxDQUFDO1FBQ1QsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRTtZQUNwQixJQUFJLENBQUMsc0JBQXNCLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQztZQUNuRSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7U0FDckQ7YUFBTTtZQUNMLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO1lBQ3JFLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzdCO0lBQ0gsQ0FBQzs7OEdBMUNVLGlCQUFpQjtrR0FBakIsaUJBQWlCLGdTQ1g5Qiw2eERBaUVBOzJGRHREYSxpQkFBaUI7a0JBTDdCLFNBQVM7K0JBQ0UsZ0JBQWdCOzZHQU8xQixLQUFLO3NCQURKLEtBQUs7Z0JBSU4sT0FBTztzQkFETixLQUFLO2dCQUlOLGNBQWM7c0JBRGIsS0FBSztnQkFJTixZQUFZO3NCQURYLEtBQUs7Z0JBSU4sZ0JBQWdCO3NCQURmLEtBQUs7Z0JBSU4sT0FBTztzQkFETixLQUFLO2dCQUlOLFlBQVk7c0JBRFgsS0FBSztnQkFJTixjQUFjO3NCQURiLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uZmlncyB9IGZyb20gJy4uLy4uL21vZGVscy9Db25maWdzLm1vZGVsJztcbmltcG9ydCB7IENvbHVtbiB9IGZyb20gJy4uLy4uL21vZGVscy9Db2x1bW4ubW9kZWwnO1xuaW1wb3J0IHsgU3RvcmUgfSBmcm9tICcuLi8uLi9zdG9yZS9zdG9yZSc7XG5pbXBvcnQgeyBBbmd1bGFyVHJlZUdyaWRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vYW5ndWxhci10cmVlLWdyaWQuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1tkYi10cmVlLWhlYWRdJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RyZWUtaGVhZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RyZWUtaGVhZC5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIFRyZWVIZWFkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKVxuICBzdG9yZTogU3RvcmU7XG5cbiAgQElucHV0KClcbiAgY29uZmlnczogQ29uZmlncztcblxuICBASW5wdXQoKVxuICBleHBhbmRfdHJhY2tlcjogYW55O1xuXG4gIEBJbnB1dCgpXG4gIGVkaXRfdHJhY2tlcjogYW55O1xuXG4gIEBJbnB1dCgpXG4gIGludGVybmFsX2NvbmZpZ3M6IGFueTtcblxuICBASW5wdXQoKVxuICBjb2x1bW5zOiBDb2x1bW5bXTtcblxuICBASW5wdXQoKVxuICByb3dzZWxlY3RhbGw6IEV2ZW50RW1pdHRlcjxhbnk+O1xuXG4gIEBJbnB1dCgpXG4gIHJvd2Rlc2VsZWN0YWxsOiBFdmVudEVtaXR0ZXI8YW55PjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFuZ3VsYXJUcmVlR3JpZFNlcnZpY2U6IEFuZ3VsYXJUcmVlR3JpZFNlcnZpY2UpIHsgfVxuXG4gIG5nT25Jbml0KCkge31cblxuICBhZGRSb3coKSB7XG4gICAgdGhpcy5pbnRlcm5hbF9jb25maWdzLnNob3dfYWRkX3JvdyA9IHRydWU7XG4gIH1cblxuICBzZWxlY3RBbGwoZSkge1xuICAgIGlmIChlLnRhcmdldC5jaGVja2VkKSB7XG4gICAgICB0aGlzLmFuZ3VsYXJUcmVlR3JpZFNlcnZpY2Uuc2VsZWN0QWxsKHRoaXMuc3RvcmUuZ2V0RGlzcGxheURhdGEoKSk7XG4gICAgICB0aGlzLnJvd3NlbGVjdGFsbC5lbWl0KHRoaXMuc3RvcmUuZ2V0RGlzcGxheURhdGEoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYW5ndWxhclRyZWVHcmlkU2VydmljZS5kZVNlbGVjdEFsbCh0aGlzLnN0b3JlLmdldERpc3BsYXlEYXRhKCkpO1xuICAgICAgdGhpcy5yb3dkZXNlbGVjdGFsbC5lbWl0KGUpO1xuICAgIH1cbiAgfVxuXG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiY29uZmlnc1wiPlxuICA8dHIgW25nQ2xhc3NdPVwiY29uZmlncy5jc3MuaGVhZGVyX2NsYXNzXCI+XG4gICAgPHRoICpuZ0lmPVwiY29uZmlncy5tdWx0aV9zZWxlY3RcIiBjbGFzcz1cImNoZWNrYm94X2NvbHVtblwiPlxuICAgICAgPGlucHV0XG4gICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgIChjbGljayk9XCJzZWxlY3RBbGwoJGV2ZW50KVwiXG4gICAgICAgIFtjaGVja2VkXT1cInRoaXMuaW50ZXJuYWxfY29uZmlncy5hbGxfc2VsZWN0ZWRcIlxuICAgICAgLz5cbiAgICA8L3RoPlxuICAgIDx0aFxuICAgICAgKm5nSWY9XCJcbiAgICAgICAgY29uZmlncy5hY3Rpb25zLmFkZCB8fCBjb25maWdzLmFjdGlvbnMuZWRpdCB8fCBjb25maWdzLmFjdGlvbnMuZGVsZXRlXG4gICAgICBcIlxuICAgICAgY2xhc3M9XCJhY3Rpb24tY29sdW1uXCJcbiAgICAgIHdpZHRoPVwie3sgY29uZmlncy5hY3Rpb25fY29sdW1uX3dpZHRoIH19XCJcbiAgICAgIChjbGljayk9XCJhZGRSb3coKVwiXG4gICAgPlxuICAgICAgPHNwYW4gY2xhc3M9XCJpY29uLWNvbnRhaW5lclwiPlxuICAgICAgICA8c3BhblxuICAgICAgICAgICpuZ0lmPVwiXG4gICAgICAgICAgICAhaW50ZXJuYWxfY29uZmlncy5zaG93X2FkZF9yb3cgJiZcbiAgICAgICAgICAgIGNvbmZpZ3MuYWN0aW9ucy5hZGQgJiZcbiAgICAgICAgICAgIGNvbmZpZ3MuY3NzLmFkZF9pY29uLmxlbmd0aCA+IDBcbiAgICAgICAgICBcIlxuICAgICAgICAgIFtpbm5lckhUTUxdPVwiY29uZmlncy5jc3MuYWRkX2ljb24gfCBzYWZlSHRtbFwiXG4gICAgICAgICAgdGl0bGU9XCJBZGQgYSByb3dcIlxuICAgICAgICA+PC9zcGFuPlxuICAgICAgICA8c3BhblxuICAgICAgICAgICpuZ0lmPVwiXG4gICAgICAgICAgICAhaW50ZXJuYWxfY29uZmlncy5zaG93X2FkZF9yb3cgJiZcbiAgICAgICAgICAgIGNvbmZpZ3MuYWN0aW9ucy5hZGQgJiZcbiAgICAgICAgICAgIGNvbmZpZ3MuY3NzLmFkZF9pY29uLmxlbmd0aCA9PSAwXG4gICAgICAgICAgXCJcbiAgICAgICAgICB0aXRsZT1cIkFkZCBhIHJvd1wiXG4gICAgICAgICAgY2xhc3M9XCJpbmJ1aWxkLWljb25cIlxuICAgICAgICAgID4rPC9zcGFuXG4gICAgICAgID5cbiAgICAgIDwvc3Bhbj5cbiAgICAgIDxzcGFuICpuZ0lmPVwiaW50ZXJuYWxfY29uZmlncy5zaG93X2FkZF9yb3cgfHwgIWNvbmZpZ3MuYWN0aW9ucy5hZGRcIlxuICAgICAgICA+QWN0aW9uczwvc3BhblxuICAgICAgPlxuICAgIDwvdGg+XG4gICAgPHRoXG4gICAgICAqbmdGb3I9XCJsZXQgY29sdW1uIG9mIGNvbHVtbnNcIlxuICAgICAgW25nQ2xhc3NdPVwieyAnY29sdW1uLWhpZGUnOiBjb2x1bW4uaGlkZGVuIH1cIlxuICAgICAgW2F0dHIud2lkdGhdPVwiY29sdW1uLndpZHRoXCJcbiAgICA+XG4gICAgICA8ZGl2XG4gICAgICAgIFtpbm5lckhUTUxdPVwiXG4gICAgICAgICAgY29sdW1uLmhlYWRlcl9yZW5kZXJlclxuICAgICAgICAgICAgPyBjb2x1bW4uaGVhZGVyX3JlbmRlcmVyKGNvbHVtbi5oZWFkZXIpXG4gICAgICAgICAgICA6IGNvbHVtbi5oZWFkZXJcbiAgICAgICAgXCJcbiAgICAgID48L2Rpdj5cbiAgICA8L3RoPlxuICAgIDx0aFxuICAgICAgKm5nSWY9XCJcbiAgICAgICAgKGNvbmZpZ3Muc2hvd19wYXJlbnRfb25fZWRpdCAmJiBpbnRlcm5hbF9jb25maWdzLnNob3dfcGFyZW50X2NvbCkgfHxcbiAgICAgICAgaW50ZXJuYWxfY29uZmlncy5zaG93X2FkZF9yb3dcbiAgICAgIFwiXG4gICAgPlxuICAgICAgUGFyZW50XG4gICAgPC90aD5cbiAgPC90cj5cbjwvbmctY29udGFpbmVyPlxuIl19