import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../../../angular-tree-grid.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
export class FilterRowComponent {
    constructor(angularTreeGridService) {
        this.angularTreeGridService = angularTreeGridService;
        this.search_values = {};
    }
    ngOnInit() {
        this.columns.forEach(column => {
            this.search_values[column.name] = '';
        });
    }
    filter() {
        this.store.filterBy(this.columns, Object.values(this.search_values));
        // Don't expand for subgrid.
        if (!this.configs.subgrid) {
            this.angularTreeGridService.expandAll(this.expand_tracker);
        }
    }
}
FilterRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: FilterRowComponent, deps: [{ token: i1.AngularTreeGridService }], target: i0.ɵɵFactoryTarget.Component });
FilterRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.1", type: FilterRowComponent, selector: "[db-filter-row]", inputs: { store: "store", columns: "columns", expand_tracker: "expand_tracker", configs: "configs", internal_configs: "internal_configs" }, ngImport: i0, template: "<td *ngIf=\"configs.multi_select\"></td>\n<td *ngIf=\"(configs.actions.edit || configs.actions.delete || configs.actions.add)\"></td>\n<td *ngFor=\"let column of columns\">\n  <div *ngIf=\"column.filter\">\n    <input type=\"text\" (keyup)=\"filter()\" [(ngModel)]=\"search_values[column.name]\">\n  </div>\n</td>\n<!-- Add column to fix UI issue when add row is enabled or Edit is enabled -->\n<td *ngIf=\"internal_configs.show_add_row || (internal_configs.show_parent_col && configs.show_parent_on_edit)\"></td>", styles: [".db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}tr{border-bottom:1px solid #cdd5dc}tr.selected{background-color:#e2e7eb}tr span.parent_container{padding-left:45px}tr.child{background:#fff}tr.child td:nth-child(2){padding:.875rem 1.25rem .875rem 2.5rem!important}tr.parent{background:#fafbff}tr.subgrid-row{background:#fcfcfc}tr td{vertical-align:middle;position:relative;padding:.5rem;box-sizing:border-box}tr td.checkbox_column{text-align:center}tr td.expand-column{padding:.3rem}tr td.column-hide{display:none}tr td.clear-left-border{border-left:0!important}tr td.clear-right-border{border-right:0!important}tr td select{padding:5px;border:1px solid #d1cece}td{vertical-align:middle;position:relative;padding:.2rem}td input{padding:5px;box-sizing:border-box;width:100%;border:1px solid #d1cece}\n"], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: FilterRowComponent, decorators: [{
            type: Component,
            args: [{ selector: '[db-filter-row]', template: "<td *ngIf=\"configs.multi_select\"></td>\n<td *ngIf=\"(configs.actions.edit || configs.actions.delete || configs.actions.add)\"></td>\n<td *ngFor=\"let column of columns\">\n  <div *ngIf=\"column.filter\">\n    <input type=\"text\" (keyup)=\"filter()\" [(ngModel)]=\"search_values[column.name]\">\n  </div>\n</td>\n<!-- Add column to fix UI issue when add row is enabled or Edit is enabled -->\n<td *ngIf=\"internal_configs.show_add_row || (internal_configs.show_parent_col && configs.show_parent_on_edit)\"></td>", styles: [".db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}tr{border-bottom:1px solid #cdd5dc}tr.selected{background-color:#e2e7eb}tr span.parent_container{padding-left:45px}tr.child{background:#fff}tr.child td:nth-child(2){padding:.875rem 1.25rem .875rem 2.5rem!important}tr.parent{background:#fafbff}tr.subgrid-row{background:#fcfcfc}tr td{vertical-align:middle;position:relative;padding:.5rem;box-sizing:border-box}tr td.checkbox_column{text-align:center}tr td.expand-column{padding:.3rem}tr td.column-hide{display:none}tr td.clear-left-border{border-left:0!important}tr td.clear-right-border{border-right:0!important}tr td select{padding:5px;border:1px solid #d1cece}td{vertical-align:middle;position:relative;padding:.2rem}td input{padding:5px;box-sizing:border-box;width:100%;border:1px solid #d1cece}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.AngularTreeGridService }]; }, propDecorators: { store: [{
                type: Input
            }], columns: [{
                type: Input
            }], expand_tracker: [{
                type: Input
            }], configs: [{
                type: Input
            }], internal_configs: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLXJvdy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyLXRyZWUtZ3JpZC9zcmMvbGliL21vZHVsZXMvdHJlZS1ib2R5L2NvbXBvbmVudHMvZmlsdGVyLXJvdy9maWx0ZXItcm93LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItdHJlZS1ncmlkL3NyYy9saWIvbW9kdWxlcy90cmVlLWJvZHkvY29tcG9uZW50cy9maWx0ZXItcm93L2ZpbHRlci1yb3cuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7O0FBV3pELE1BQU0sT0FBTyxrQkFBa0I7SUFrQjdCLFlBQW9CLHNCQUE4QztRQUE5QywyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBakJsRSxrQkFBYSxHQUFRLEVBQUUsQ0FBQztJQWlCOEMsQ0FBQztJQUV2RSxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDNUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELE1BQU07UUFDSixJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7UUFFckUsNEJBQTRCO1FBQzVCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRTtZQUN6QixJQUFJLENBQUMsc0JBQXNCLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztTQUM1RDtJQUNILENBQUM7OytHQWpDVSxrQkFBa0I7bUdBQWxCLGtCQUFrQixtTUNYL0IsbWdCQVFvSDsyRkRHdkcsa0JBQWtCO2tCQUw5QixTQUFTOytCQUNFLGlCQUFpQjs2R0FRM0IsS0FBSztzQkFESixLQUFLO2dCQUlOLE9BQU87c0JBRE4sS0FBSztnQkFJTixjQUFjO3NCQURiLEtBQUs7Z0JBSU4sT0FBTztzQkFETixLQUFLO2dCQUlOLGdCQUFnQjtzQkFEZixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb2x1bW4gfSBmcm9tICcuLi8uLi8uLi8uLi9tb2RlbHMvQ29sdW1uLm1vZGVsJztcbmltcG9ydCB7IENvbmZpZ3MgfSBmcm9tICcuLi8uLi8uLi8uLi9tb2RlbHMvQ29uZmlncy5tb2RlbCc7XG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gJy4uLy4uLy4uLy4uL3N0b3JlL3N0b3JlJztcbmltcG9ydCB7IEFuZ3VsYXJUcmVlR3JpZFNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi9hbmd1bGFyLXRyZWUtZ3JpZC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnW2RiLWZpbHRlci1yb3ddJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ZpbHRlci1yb3cuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9maWx0ZXItcm93LmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgRmlsdGVyUm93Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgc2VhcmNoX3ZhbHVlczogYW55ID0ge307XG5cbiAgQElucHV0KClcbiAgc3RvcmU6IFN0b3JlO1xuXG4gIEBJbnB1dCgpXG4gIGNvbHVtbnM6IENvbHVtbltdO1xuXG4gIEBJbnB1dCgpXG4gIGV4cGFuZF90cmFja2VyOiBhbnk7XG5cbiAgQElucHV0KClcbiAgY29uZmlnczogQ29uZmlncztcblxuICBASW5wdXQoKVxuICBpbnRlcm5hbF9jb25maWdzOiBhbnk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBhbmd1bGFyVHJlZUdyaWRTZXJ2aWNlOiBBbmd1bGFyVHJlZUdyaWRTZXJ2aWNlKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmNvbHVtbnMuZm9yRWFjaChjb2x1bW4gPT4ge1xuICAgICAgdGhpcy5zZWFyY2hfdmFsdWVzW2NvbHVtbi5uYW1lXSA9ICcnO1xuICAgIH0pO1xuICB9XG5cbiAgZmlsdGVyKCkge1xuICAgIHRoaXMuc3RvcmUuZmlsdGVyQnkodGhpcy5jb2x1bW5zLCBPYmplY3QudmFsdWVzKHRoaXMuc2VhcmNoX3ZhbHVlcykpO1xuXG4gICAgLy8gRG9uJ3QgZXhwYW5kIGZvciBzdWJncmlkLlxuICAgIGlmICghdGhpcy5jb25maWdzLnN1YmdyaWQpIHtcbiAgICAgIHRoaXMuYW5ndWxhclRyZWVHcmlkU2VydmljZS5leHBhbmRBbGwodGhpcy5leHBhbmRfdHJhY2tlcik7XG4gICAgfVxuICB9XG5cbn1cbiIsIjx0ZCAqbmdJZj1cImNvbmZpZ3MubXVsdGlfc2VsZWN0XCI+PC90ZD5cbjx0ZCAqbmdJZj1cIihjb25maWdzLmFjdGlvbnMuZWRpdCB8fCBjb25maWdzLmFjdGlvbnMuZGVsZXRlIHx8IGNvbmZpZ3MuYWN0aW9ucy5hZGQpXCI+PC90ZD5cbjx0ZCAqbmdGb3I9XCJsZXQgY29sdW1uIG9mIGNvbHVtbnNcIj5cbiAgPGRpdiAqbmdJZj1cImNvbHVtbi5maWx0ZXJcIj5cbiAgICA8aW5wdXQgdHlwZT1cInRleHRcIiAoa2V5dXApPVwiZmlsdGVyKClcIiBbKG5nTW9kZWwpXT1cInNlYXJjaF92YWx1ZXNbY29sdW1uLm5hbWVdXCI+XG4gIDwvZGl2PlxuPC90ZD5cbjwhLS0gQWRkIGNvbHVtbiB0byBmaXggVUkgaXNzdWUgd2hlbiBhZGQgcm93IGlzIGVuYWJsZWQgb3IgRWRpdCBpcyBlbmFibGVkIC0tPlxuPHRkICpuZ0lmPVwiaW50ZXJuYWxfY29uZmlncy5zaG93X2FkZF9yb3cgfHwgKGludGVybmFsX2NvbmZpZ3Muc2hvd19wYXJlbnRfY29sICYmIGNvbmZpZ3Muc2hvd19wYXJlbnRfb25fZWRpdClcIj48L3RkPiJdfQ==