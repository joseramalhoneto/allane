import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TreeCellComponent } from './tree-cell.component';
import { TreeCellViewComponent } from './components/tree-cell-view/default/tree-cell-view.component';
import { CustomCellViewComponent } from './components/tree-cell-view/custom/custom-tree-cell.component';
import { TreeCellActionsComponent } from './components/tree-cell-actions/tree-cell-actions.component';
import { CustomCellEditorComponent } from './components/tree-cell-editor/custom/custom-tree-cell-Editor.component';
import { TreeCellEditorComponent } from './components/tree-cell-editor/default/cell-editor/tree-cell-editor.component';
import { FormsModule } from '@angular/forms';
import { SafeHtmlPipe } from '../../pipes/pipe.safehtml';
import * as i0 from "@angular/core";
export class TreeCellModule {
}
TreeCellModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: TreeCellModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TreeCellModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: TreeCellModule, declarations: [TreeCellComponent,
        TreeCellViewComponent,
        CustomCellViewComponent,
        TreeCellActionsComponent,
        CustomCellEditorComponent,
        TreeCellEditorComponent,
        SafeHtmlPipe], imports: [CommonModule,
        FormsModule], exports: [TreeCellComponent,
        CustomCellViewComponent,
        CustomCellEditorComponent,
        TreeCellEditorComponent,
        TreeCellActionsComponent,
        SafeHtmlPipe] });
TreeCellModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: TreeCellModule, imports: [[
            CommonModule,
            FormsModule
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: TreeCellModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        TreeCellComponent,
                        TreeCellViewComponent,
                        CustomCellViewComponent,
                        TreeCellActionsComponent,
                        CustomCellEditorComponent,
                        TreeCellEditorComponent,
                        SafeHtmlPipe
                    ],
                    imports: [
                        CommonModule,
                        FormsModule
                    ],
                    exports: [
                        TreeCellComponent,
                        CustomCellViewComponent,
                        CustomCellEditorComponent,
                        TreeCellEditorComponent,
                        TreeCellActionsComponent,
                        SafeHtmlPipe
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1jZWxsLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItdHJlZS1ncmlkL3NyYy9saWIvbW9kdWxlcy90cmVlLWNlbGwvdHJlZS1jZWxsLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw4REFBOEQsQ0FBQztBQUNyRyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwrREFBK0QsQ0FBQztBQUN4RyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUN0RyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSx3RUFBd0UsQ0FBQztBQUNuSCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4RUFBOEUsQ0FBQztBQUN2SCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDJCQUEyQixDQUFDOztBQXlCekQsTUFBTSxPQUFPLGNBQWM7OzJHQUFkLGNBQWM7NEdBQWQsY0FBYyxpQkFyQnZCLGlCQUFpQjtRQUNqQixxQkFBcUI7UUFDckIsdUJBQXVCO1FBQ3ZCLHdCQUF3QjtRQUN4Qix5QkFBeUI7UUFDekIsdUJBQXVCO1FBQ3ZCLFlBQVksYUFHWixZQUFZO1FBQ1osV0FBVyxhQUdYLGlCQUFpQjtRQUNqQix1QkFBdUI7UUFDdkIseUJBQXlCO1FBQ3pCLHVCQUF1QjtRQUN2Qix3QkFBd0I7UUFDeEIsWUFBWTs0R0FHSCxjQUFjLFlBYmhCO1lBQ1AsWUFBWTtZQUNaLFdBQVc7U0FDWjsyRkFVVSxjQUFjO2tCQXZCMUIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osaUJBQWlCO3dCQUNqQixxQkFBcUI7d0JBQ3JCLHVCQUF1Qjt3QkFDdkIsd0JBQXdCO3dCQUN4Qix5QkFBeUI7d0JBQ3pCLHVCQUF1Qjt3QkFDdkIsWUFBWTtxQkFDYjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixXQUFXO3FCQUNaO29CQUNELE9BQU8sRUFBRTt3QkFDUCxpQkFBaUI7d0JBQ2pCLHVCQUF1Qjt3QkFDdkIseUJBQXlCO3dCQUN6Qix1QkFBdUI7d0JBQ3ZCLHdCQUF3Qjt3QkFDeEIsWUFBWTtxQkFDYjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgVHJlZUNlbGxDb21wb25lbnQgfSBmcm9tICcuL3RyZWUtY2VsbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVHJlZUNlbGxWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3RyZWUtY2VsbC12aWV3L2RlZmF1bHQvdHJlZS1jZWxsLXZpZXcuY29tcG9uZW50JztcbmltcG9ydCB7IEN1c3RvbUNlbGxWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3RyZWUtY2VsbC12aWV3L2N1c3RvbS9jdXN0b20tdHJlZS1jZWxsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUcmVlQ2VsbEFjdGlvbnNDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdHJlZS1jZWxsLWFjdGlvbnMvdHJlZS1jZWxsLWFjdGlvbnMuY29tcG9uZW50JztcbmltcG9ydCB7IEN1c3RvbUNlbGxFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdHJlZS1jZWxsLWVkaXRvci9jdXN0b20vY3VzdG9tLXRyZWUtY2VsbC1FZGl0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IFRyZWVDZWxsRWRpdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3RyZWUtY2VsbC1lZGl0b3IvZGVmYXVsdC9jZWxsLWVkaXRvci90cmVlLWNlbGwtZWRpdG9yLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IFNhZmVIdG1sUGlwZSB9IGZyb20gJy4uLy4uL3BpcGVzL3BpcGUuc2FmZWh0bWwnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBUcmVlQ2VsbENvbXBvbmVudCxcbiAgICBUcmVlQ2VsbFZpZXdDb21wb25lbnQsXG4gICAgQ3VzdG9tQ2VsbFZpZXdDb21wb25lbnQsXG4gICAgVHJlZUNlbGxBY3Rpb25zQ29tcG9uZW50LFxuICAgIEN1c3RvbUNlbGxFZGl0b3JDb21wb25lbnQsXG4gICAgVHJlZUNlbGxFZGl0b3JDb21wb25lbnQsXG4gICAgU2FmZUh0bWxQaXBlXG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgRm9ybXNNb2R1bGVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIFRyZWVDZWxsQ29tcG9uZW50LFxuICAgIEN1c3RvbUNlbGxWaWV3Q29tcG9uZW50LFxuICAgIEN1c3RvbUNlbGxFZGl0b3JDb21wb25lbnQsXG4gICAgVHJlZUNlbGxFZGl0b3JDb21wb25lbnQsXG4gICAgVHJlZUNlbGxBY3Rpb25zQ29tcG9uZW50LFxuICAgIFNhZmVIdG1sUGlwZVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFRyZWVDZWxsTW9kdWxlIHsgfVxuIl19