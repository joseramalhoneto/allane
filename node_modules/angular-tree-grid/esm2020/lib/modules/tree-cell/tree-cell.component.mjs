import { Component, Input, EventEmitter, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./components/tree-cell-view/custom/custom-tree-cell.component";
import * as i2 from "./components/tree-cell-view/default/tree-cell-view.component";
import * as i3 from "./components/tree-cell-editor/custom/custom-tree-cell-Editor.component";
import * as i4 from "./components/tree-cell-editor/default/cell-editor/tree-cell-editor.component";
import * as i5 from "@angular/common";
import * as i6 from "../../pipes/pipe.safehtml";
export class TreeCellComponent {
    constructor() {
        this.rowexpand = new EventEmitter();
        this.rowcollapse = new EventEmitter();
        this.canceledit = new EventEmitter();
        this.editcomplete = new EventEmitter();
    }
    ngOnInit() {
        this.is_expand_column = this.index === 0;
        this.show_expand_icon = !this.row_data.leaf;
        // If user mentions a node as leaf.
        if (this.configs.load_children_on_expand) {
            this.show_expand_icon = !this.row_data.leaf_node;
        }
        this.cell_value = this.row_data[this.column.name];
    }
    expandRow(event) {
        if (this.index === 0 && (!this.row_data.leaf || this.configs.load_children_on_expand)) {
            this.rowexpand.emit({ event: event, data: this.row_data });
            event.stopPropagation();
        }
    }
    collapseRow(event) {
        if (this.index === 0 && (!this.row_data.leaf || this.configs.load_children_on_expand)) {
            this.rowcollapse.emit({ event: event, data: this.row_data });
            event.stopPropagation();
        }
    }
    onCellClick(event) {
        this.cellclick.emit({ column: this.column, row: this.row_data, event: event });
    }
    onEditComplete($event) {
        this.editcomplete.emit({ event: $event, data: this.row_data });
    }
}
TreeCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: TreeCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TreeCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.1", type: TreeCellComponent, selector: "db-tree-cell", inputs: { configs: "configs", index: "index", row_data: "row_data", column: "column", expand_tracker: "expand_tracker", cellclick: "cellclick", edit_on: "edit_on" }, outputs: { rowexpand: "rowexpand", rowcollapse: "rowcollapse", canceledit: "canceledit", editcomplete: "editcomplete" }, ngImport: i0, template: "<div (click)=\"onCellClick($event)\">\n  <ng-container *ngIf=\"is_expand_column\">\n    <div\n      [ngStyle]=\"{\n        'padding-left': row_data.leaf\n          ? row_data.levelx * 20 + 'px'\n          : row_data.levelx * 10 + 'px'\n      }\"\n    >\n      <span\n        class=\"no-expand-icon\"\n        *ngIf=\"row_data.levelx == 0 && row_data.leaf\"\n      ></span>\n      <ng-container *ngIf=\"!expand_tracker[row_data.pathx]\">\n        <span (click)=\"expandRow($event)\" class=\"expand-icon-container\">\n          <span\n            class=\"expand-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.expand_icon.length > 0\"\n            [innerHTML]=\"configs.css.expand_icon | safeHtml\"\n          ></span>\n          <span\n            class=\"expand-icon inbuild-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.expand_icon.length == 0\"\n            >+</span\n          >\n        </span>\n      </ng-container>\n      <ng-container *ngIf=\"expand_tracker[row_data.pathx]\">\n        <span *ngIf=\"row_data.is_loading\" class=\"childred-loader\"></span>\n        <span (click)=\"collapseRow($event)\" *ngIf=\"!row_data.is_loading\" class=\"expand-icon-container\">\n          <span\n            class=\"expand-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.collapse_icon.length > 0\"\n            [innerHTML]=\"configs.css.collapse_icon | safeHtml\"\n          ></span>\n          <span\n            class=\"expand-icon inbuild-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.collapse_icon.length == 0\"\n            >-</span\n          >\n        </span>\n      </ng-container>\n      <ng-container\n        *ngIf=\"!edit_on || !column.editable\"\n        [ngSwitch]=\"column.type\"\n      >\n        <db-custom-cell-component\n          *ngSwitchCase=\"'custom'\"\n          [column]=\"column\"\n          [row_data]=\"row_data\"\n        >\n        </db-custom-cell-component>\n        <db-tree-cell-view\n          *ngSwitchDefault\n          [column]=\"column\"\n          [row_data]=\"row_data\"\n        >\n        </db-tree-cell-view>\n      </ng-container>\n      <ng-container *ngIf=\"edit_on && column.editable\">\n        <db-custom-cell-editor-component\n          *ngIf=\"column.editor\"\n          [cell_value]=\"cell_value\"\n          [column]=\"column\"\n          [row_data]=\"row_data\"\n          (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n          (editcomplete)=\"onEditComplete($event)\"\n        >\n        </db-custom-cell-editor-component>\n        <db-tree-cell-editor\n          *ngIf=\"!column.editor\"\n          [cell_value]=\"cell_value\"\n          [row_data]=\"row_data\"\n          [column]=\"column\"\n          [expandable_column]=\"true\"\n          (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n          (editcomplete)=\"onEditComplete($event)\"\n        >\n        </db-tree-cell-editor>\n      </ng-container>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!is_expand_column\">\n    <ng-container *ngIf=\"!edit_on || !column.editable\" [ngSwitch]=\"column.type\">\n      <db-custom-cell-component\n        *ngSwitchCase=\"'custom'\"\n        [column]=\"column\"\n        [row_data]=\"row_data\"\n      >\n      </db-custom-cell-component>\n      <db-tree-cell-view\n        *ngSwitchDefault\n        [column]=\"column\"\n        [row_data]=\"row_data\"\n      >\n      </db-tree-cell-view>\n    </ng-container>\n\n    <ng-container *ngIf=\"edit_on && column.editable\">\n      <db-custom-cell-editor-component\n        *ngIf=\"column.editor\"\n        [cell_value]=\"cell_value\"\n        [column]=\"column\"\n        [row_data]=\"row_data\"\n        (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n        (editcomplete)=\"onEditComplete($event)\"\n      >\n      </db-custom-cell-editor-component>\n      <db-tree-cell-editor\n        *ngIf=\"!column.editor\"\n        [cell_value]=\"cell_value\"\n        [row_data]=\"row_data\"\n        [column]=\"column\"\n        [expandable_column]=\"false\"\n        (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n        (editcomplete)=\"onEditComplete($event)\"\n      >\n      </db-tree-cell-editor>\n    </ng-container>\n  </ng-container>\n</div>\n", styles: [".db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}i.expand-icon{margin-right:5px}span.no-expand-icon{display:inline-block;width:14px}span.expand-icon-container{position:relative;cursor:pointer;margin:0 5px 0 0}span.expand-icon-container span.inbuild-icon{font-size:25px}span.childred-loader{border:3px solid #f3f3f3;animation:spin 1s linear infinite;border-top:3px solid #555;border-radius:50%;width:10px;height:10px;display:inline-block;margin-right:5px}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\n"], components: [{ type: i1.CustomCellViewComponent, selector: "db-custom-cell-component", inputs: ["column", "row_data"] }, { type: i2.TreeCellViewComponent, selector: "db-tree-cell-view", inputs: ["column", "row_data"] }, { type: i3.CustomCellEditorComponent, selector: "db-custom-cell-editor-component", inputs: ["column", "cell_value", "row_data"] }, { type: i4.TreeCellEditorComponent, selector: "db-tree-cell-editor", inputs: ["cell_value", "row_data", "column", "expandable_column"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i5.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5.NgSwitchDefault, selector: "[ngSwitchDefault]" }], pipes: { "safeHtml": i6.SafeHtmlPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: TreeCellComponent, decorators: [{
            type: Component,
            args: [{ selector: 'db-tree-cell', template: "<div (click)=\"onCellClick($event)\">\n  <ng-container *ngIf=\"is_expand_column\">\n    <div\n      [ngStyle]=\"{\n        'padding-left': row_data.leaf\n          ? row_data.levelx * 20 + 'px'\n          : row_data.levelx * 10 + 'px'\n      }\"\n    >\n      <span\n        class=\"no-expand-icon\"\n        *ngIf=\"row_data.levelx == 0 && row_data.leaf\"\n      ></span>\n      <ng-container *ngIf=\"!expand_tracker[row_data.pathx]\">\n        <span (click)=\"expandRow($event)\" class=\"expand-icon-container\">\n          <span\n            class=\"expand-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.expand_icon.length > 0\"\n            [innerHTML]=\"configs.css.expand_icon | safeHtml\"\n          ></span>\n          <span\n            class=\"expand-icon inbuild-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.expand_icon.length == 0\"\n            >+</span\n          >\n        </span>\n      </ng-container>\n      <ng-container *ngIf=\"expand_tracker[row_data.pathx]\">\n        <span *ngIf=\"row_data.is_loading\" class=\"childred-loader\"></span>\n        <span (click)=\"collapseRow($event)\" *ngIf=\"!row_data.is_loading\" class=\"expand-icon-container\">\n          <span\n            class=\"expand-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.collapse_icon.length > 0\"\n            [innerHTML]=\"configs.css.collapse_icon | safeHtml\"\n          ></span>\n          <span\n            class=\"expand-icon inbuild-icon\"\n            [ngStyle]=\"{\n              visibility: row_data.expand_disabled ? 'hidden' : 'visible'\n            }\"\n            *ngIf=\"show_expand_icon && configs.css.collapse_icon.length == 0\"\n            >-</span\n          >\n        </span>\n      </ng-container>\n      <ng-container\n        *ngIf=\"!edit_on || !column.editable\"\n        [ngSwitch]=\"column.type\"\n      >\n        <db-custom-cell-component\n          *ngSwitchCase=\"'custom'\"\n          [column]=\"column\"\n          [row_data]=\"row_data\"\n        >\n        </db-custom-cell-component>\n        <db-tree-cell-view\n          *ngSwitchDefault\n          [column]=\"column\"\n          [row_data]=\"row_data\"\n        >\n        </db-tree-cell-view>\n      </ng-container>\n      <ng-container *ngIf=\"edit_on && column.editable\">\n        <db-custom-cell-editor-component\n          *ngIf=\"column.editor\"\n          [cell_value]=\"cell_value\"\n          [column]=\"column\"\n          [row_data]=\"row_data\"\n          (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n          (editcomplete)=\"onEditComplete($event)\"\n        >\n        </db-custom-cell-editor-component>\n        <db-tree-cell-editor\n          *ngIf=\"!column.editor\"\n          [cell_value]=\"cell_value\"\n          [row_data]=\"row_data\"\n          [column]=\"column\"\n          [expandable_column]=\"true\"\n          (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n          (editcomplete)=\"onEditComplete($event)\"\n        >\n        </db-tree-cell-editor>\n      </ng-container>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!is_expand_column\">\n    <ng-container *ngIf=\"!edit_on || !column.editable\" [ngSwitch]=\"column.type\">\n      <db-custom-cell-component\n        *ngSwitchCase=\"'custom'\"\n        [column]=\"column\"\n        [row_data]=\"row_data\"\n      >\n      </db-custom-cell-component>\n      <db-tree-cell-view\n        *ngSwitchDefault\n        [column]=\"column\"\n        [row_data]=\"row_data\"\n      >\n      </db-tree-cell-view>\n    </ng-container>\n\n    <ng-container *ngIf=\"edit_on && column.editable\">\n      <db-custom-cell-editor-component\n        *ngIf=\"column.editor\"\n        [cell_value]=\"cell_value\"\n        [column]=\"column\"\n        [row_data]=\"row_data\"\n        (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n        (editcomplete)=\"onEditComplete($event)\"\n      >\n      </db-custom-cell-editor-component>\n      <db-tree-cell-editor\n        *ngIf=\"!column.editor\"\n        [cell_value]=\"cell_value\"\n        [row_data]=\"row_data\"\n        [column]=\"column\"\n        [expandable_column]=\"false\"\n        (canceledit)=\"canceledit.emit(row_data['pathx'])\"\n        (editcomplete)=\"onEditComplete($event)\"\n      >\n      </db-tree-cell-editor>\n    </ng-container>\n  </ng-container>\n</div>\n", styles: [".db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}i.expand-icon{margin-right:5px}span.no-expand-icon{display:inline-block;width:14px}span.expand-icon-container{position:relative;cursor:pointer;margin:0 5px 0 0}span.expand-icon-container span.inbuild-icon{font-size:25px}span.childred-loader{border:3px solid #f3f3f3;animation:spin 1s linear infinite;border-top:3px solid #555;border-radius:50%;width:10px;height:10px;display:inline-block;margin-right:5px}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { configs: [{
                type: Input
            }], index: [{
                type: Input
            }], row_data: [{
                type: Input
            }], column: [{
                type: Input
            }], expand_tracker: [{
                type: Input
            }], cellclick: [{
                type: Input
            }], edit_on: [{
                type: Input
            }], rowexpand: [{
                type: Output
            }], rowcollapse: [{
                type: Output
            }], canceledit: [{
                type: Output
            }], editcomplete: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1jZWxsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItdHJlZS1ncmlkL3NyYy9saWIvbW9kdWxlcy90cmVlLWNlbGwvdHJlZS1jZWxsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItdHJlZS1ncmlkL3NyYy9saWIvbW9kdWxlcy90cmVlLWNlbGwvdHJlZS1jZWxsLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7O0FBUy9FLE1BQU0sT0FBTyxpQkFBaUI7SUE4QjVCO1FBTFUsY0FBUyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2xELGdCQUFXLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDcEQsZUFBVSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ25ELGlCQUFZLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFFL0MsQ0FBQztJQUVqQixRQUFRO1FBQ04sSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDO1FBRTVDLG1DQUFtQztRQUNuQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsdUJBQXVCLEVBQUU7WUFDeEMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUM7U0FDbEQ7UUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQsU0FBUyxDQUFDLEtBQUs7UUFDYixJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLHVCQUF1QixDQUFDLEVBQUU7WUFDckYsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFDLENBQUMsQ0FBQztZQUN6RCxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDekI7SUFDSCxDQUFDO0lBRUQsV0FBVyxDQUFDLEtBQUs7UUFDZixJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLHVCQUF1QixDQUFDLEVBQUU7WUFDckYsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFDLENBQUMsQ0FBQztZQUMzRCxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDekI7SUFDSCxDQUFDO0lBRUQsV0FBVyxDQUFDLEtBQUs7UUFDZixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDO0lBQy9FLENBQUM7SUFFRCxjQUFjLENBQUMsTUFBTTtRQUNuQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDO0lBQy9ELENBQUM7OzhHQS9EVSxpQkFBaUI7a0dBQWpCLGlCQUFpQixtVkNUOUIsMG1KQXFJQTsyRkQ1SGEsaUJBQWlCO2tCQUw3QixTQUFTOytCQUNFLGNBQWM7MEVBU3hCLE9BQU87c0JBRE4sS0FBSztnQkFJTixLQUFLO3NCQURKLEtBQUs7Z0JBSU4sUUFBUTtzQkFEUCxLQUFLO2dCQUlOLE1BQU07c0JBREwsS0FBSztnQkFJTixjQUFjO3NCQURiLEtBQUs7Z0JBSU4sU0FBUztzQkFEUixLQUFLO2dCQUlOLE9BQU87c0JBRE4sS0FBSztnQkFHSSxTQUFTO3NCQUFsQixNQUFNO2dCQUNHLFdBQVc7c0JBQXBCLE1BQU07Z0JBQ0csVUFBVTtzQkFBbkIsTUFBTTtnQkFDRyxZQUFZO3NCQUFyQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBFdmVudEVtaXR0ZXIsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29sdW1uIH0gZnJvbSAnLi4vLi4vbW9kZWxzL0NvbHVtbi5tb2RlbCc7XG5pbXBvcnQgeyBDb25maWdzIH0gZnJvbSAnLi4vLi4vbW9kZWxzL0NvbmZpZ3MubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdkYi10cmVlLWNlbGwnLFxuICB0ZW1wbGF0ZVVybDogJy4vdHJlZS1jZWxsLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdHJlZS1jZWxsLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVHJlZUNlbGxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBpc19leHBhbmRfY29sdW1uOiBib29sZWFuO1xuICBzaG93X2V4cGFuZF9pY29uOiBib29sZWFuO1xuICBjZWxsX3ZhbHVlOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGNvbmZpZ3M6IENvbmZpZ3M7XG5cbiAgQElucHV0KClcbiAgaW5kZXg6IG51bWJlcjtcblxuICBASW5wdXQoKVxuICByb3dfZGF0YTogYW55O1xuXG4gIEBJbnB1dCgpXG4gIGNvbHVtbjogQ29sdW1uO1xuXG4gIEBJbnB1dCgpXG4gIGV4cGFuZF90cmFja2VyOiBhbnk7XG5cbiAgQElucHV0KClcbiAgY2VsbGNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcblxuICBASW5wdXQoKVxuICBlZGl0X29uOiBib29sZWFuO1xuXG4gIEBPdXRwdXQoKSByb3dleHBhbmQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcm93Y29sbGFwc2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgY2FuY2VsZWRpdDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBlZGl0Y29tcGxldGU6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pc19leHBhbmRfY29sdW1uID0gdGhpcy5pbmRleCA9PT0gMDtcbiAgICB0aGlzLnNob3dfZXhwYW5kX2ljb24gPSAhdGhpcy5yb3dfZGF0YS5sZWFmO1xuXG4gICAgLy8gSWYgdXNlciBtZW50aW9ucyBhIG5vZGUgYXMgbGVhZi5cbiAgICBpZiAodGhpcy5jb25maWdzLmxvYWRfY2hpbGRyZW5fb25fZXhwYW5kKSB7XG4gICAgICB0aGlzLnNob3dfZXhwYW5kX2ljb24gPSAhdGhpcy5yb3dfZGF0YS5sZWFmX25vZGU7XG4gICAgfVxuICAgIHRoaXMuY2VsbF92YWx1ZSA9IHRoaXMucm93X2RhdGFbdGhpcy5jb2x1bW4ubmFtZV07XG4gIH1cblxuICBleHBhbmRSb3coZXZlbnQpIHtcbiAgICBpZiAodGhpcy5pbmRleCA9PT0gMCAmJiAoIXRoaXMucm93X2RhdGEubGVhZiB8fCB0aGlzLmNvbmZpZ3MubG9hZF9jaGlsZHJlbl9vbl9leHBhbmQpKSB7XG4gICAgICB0aGlzLnJvd2V4cGFuZC5lbWl0KHtldmVudDogZXZlbnQsIGRhdGE6IHRoaXMucm93X2RhdGF9KTtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH1cbiAgfVxuXG4gIGNvbGxhcHNlUm93KGV2ZW50KSB7XG4gICAgaWYgKHRoaXMuaW5kZXggPT09IDAgJiYgKCF0aGlzLnJvd19kYXRhLmxlYWYgfHwgdGhpcy5jb25maWdzLmxvYWRfY2hpbGRyZW5fb25fZXhwYW5kKSkge1xuICAgICAgdGhpcy5yb3djb2xsYXBzZS5lbWl0KHtldmVudDogZXZlbnQsIGRhdGE6IHRoaXMucm93X2RhdGF9KTtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH1cbiAgfVxuXG4gIG9uQ2VsbENsaWNrKGV2ZW50KSB7XG4gICAgdGhpcy5jZWxsY2xpY2suZW1pdCh7Y29sdW1uOiB0aGlzLmNvbHVtbiwgcm93OiB0aGlzLnJvd19kYXRhLCBldmVudDogZXZlbnR9KTtcbiAgfVxuXG4gIG9uRWRpdENvbXBsZXRlKCRldmVudCkge1xuICAgIHRoaXMuZWRpdGNvbXBsZXRlLmVtaXQoe2V2ZW50OiAkZXZlbnQsIGRhdGE6IHRoaXMucm93X2RhdGF9KTtcbiAgfVxuXG59XG4iLCI8ZGl2IChjbGljayk9XCJvbkNlbGxDbGljaygkZXZlbnQpXCI+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJpc19leHBhbmRfY29sdW1uXCI+XG4gICAgPGRpdlxuICAgICAgW25nU3R5bGVdPVwie1xuICAgICAgICAncGFkZGluZy1sZWZ0Jzogcm93X2RhdGEubGVhZlxuICAgICAgICAgID8gcm93X2RhdGEubGV2ZWx4ICogMjAgKyAncHgnXG4gICAgICAgICAgOiByb3dfZGF0YS5sZXZlbHggKiAxMCArICdweCdcbiAgICAgIH1cIlxuICAgID5cbiAgICAgIDxzcGFuXG4gICAgICAgIGNsYXNzPVwibm8tZXhwYW5kLWljb25cIlxuICAgICAgICAqbmdJZj1cInJvd19kYXRhLmxldmVseCA9PSAwICYmIHJvd19kYXRhLmxlYWZcIlxuICAgICAgPjwvc3Bhbj5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhZXhwYW5kX3RyYWNrZXJbcm93X2RhdGEucGF0aHhdXCI+XG4gICAgICAgIDxzcGFuIChjbGljayk9XCJleHBhbmRSb3coJGV2ZW50KVwiIGNsYXNzPVwiZXhwYW5kLWljb24tY29udGFpbmVyXCI+XG4gICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgIGNsYXNzPVwiZXhwYW5kLWljb25cIlxuICAgICAgICAgICAgW25nU3R5bGVdPVwie1xuICAgICAgICAgICAgICB2aXNpYmlsaXR5OiByb3dfZGF0YS5leHBhbmRfZGlzYWJsZWQgPyAnaGlkZGVuJyA6ICd2aXNpYmxlJ1xuICAgICAgICAgICAgfVwiXG4gICAgICAgICAgICAqbmdJZj1cInNob3dfZXhwYW5kX2ljb24gJiYgY29uZmlncy5jc3MuZXhwYW5kX2ljb24ubGVuZ3RoID4gMFwiXG4gICAgICAgICAgICBbaW5uZXJIVE1MXT1cImNvbmZpZ3MuY3NzLmV4cGFuZF9pY29uIHwgc2FmZUh0bWxcIlxuICAgICAgICAgID48L3NwYW4+XG4gICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgIGNsYXNzPVwiZXhwYW5kLWljb24gaW5idWlsZC1pY29uXCJcbiAgICAgICAgICAgIFtuZ1N0eWxlXT1cIntcbiAgICAgICAgICAgICAgdmlzaWJpbGl0eTogcm93X2RhdGEuZXhwYW5kX2Rpc2FibGVkID8gJ2hpZGRlbicgOiAndmlzaWJsZSdcbiAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgKm5nSWY9XCJzaG93X2V4cGFuZF9pY29uICYmIGNvbmZpZ3MuY3NzLmV4cGFuZF9pY29uLmxlbmd0aCA9PSAwXCJcbiAgICAgICAgICAgID4rPC9zcGFuXG4gICAgICAgICAgPlxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJleHBhbmRfdHJhY2tlcltyb3dfZGF0YS5wYXRoeF1cIj5cbiAgICAgICAgPHNwYW4gKm5nSWY9XCJyb3dfZGF0YS5pc19sb2FkaW5nXCIgY2xhc3M9XCJjaGlsZHJlZC1sb2FkZXJcIj48L3NwYW4+XG4gICAgICAgIDxzcGFuIChjbGljayk9XCJjb2xsYXBzZVJvdygkZXZlbnQpXCIgKm5nSWY9XCIhcm93X2RhdGEuaXNfbG9hZGluZ1wiIGNsYXNzPVwiZXhwYW5kLWljb24tY29udGFpbmVyXCI+XG4gICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgIGNsYXNzPVwiZXhwYW5kLWljb25cIlxuICAgICAgICAgICAgW25nU3R5bGVdPVwie1xuICAgICAgICAgICAgICB2aXNpYmlsaXR5OiByb3dfZGF0YS5leHBhbmRfZGlzYWJsZWQgPyAnaGlkZGVuJyA6ICd2aXNpYmxlJ1xuICAgICAgICAgICAgfVwiXG4gICAgICAgICAgICAqbmdJZj1cInNob3dfZXhwYW5kX2ljb24gJiYgY29uZmlncy5jc3MuY29sbGFwc2VfaWNvbi5sZW5ndGggPiAwXCJcbiAgICAgICAgICAgIFtpbm5lckhUTUxdPVwiY29uZmlncy5jc3MuY29sbGFwc2VfaWNvbiB8IHNhZmVIdG1sXCJcbiAgICAgICAgICA+PC9zcGFuPlxuICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICBjbGFzcz1cImV4cGFuZC1pY29uIGluYnVpbGQtaWNvblwiXG4gICAgICAgICAgICBbbmdTdHlsZV09XCJ7XG4gICAgICAgICAgICAgIHZpc2liaWxpdHk6IHJvd19kYXRhLmV4cGFuZF9kaXNhYmxlZCA/ICdoaWRkZW4nIDogJ3Zpc2libGUnXG4gICAgICAgICAgICB9XCJcbiAgICAgICAgICAgICpuZ0lmPVwic2hvd19leHBhbmRfaWNvbiAmJiBjb25maWdzLmNzcy5jb2xsYXBzZV9pY29uLmxlbmd0aCA9PSAwXCJcbiAgICAgICAgICAgID4tPC9zcGFuXG4gICAgICAgICAgPlxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDxuZy1jb250YWluZXJcbiAgICAgICAgKm5nSWY9XCIhZWRpdF9vbiB8fCAhY29sdW1uLmVkaXRhYmxlXCJcbiAgICAgICAgW25nU3dpdGNoXT1cImNvbHVtbi50eXBlXCJcbiAgICAgID5cbiAgICAgICAgPGRiLWN1c3RvbS1jZWxsLWNvbXBvbmVudFxuICAgICAgICAgICpuZ1N3aXRjaENhc2U9XCInY3VzdG9tJ1wiXG4gICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgIFtyb3dfZGF0YV09XCJyb3dfZGF0YVwiXG4gICAgICAgID5cbiAgICAgICAgPC9kYi1jdXN0b20tY2VsbC1jb21wb25lbnQ+XG4gICAgICAgIDxkYi10cmVlLWNlbGwtdmlld1xuICAgICAgICAgICpuZ1N3aXRjaERlZmF1bHRcbiAgICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gICAgICAgICAgW3Jvd19kYXRhXT1cInJvd19kYXRhXCJcbiAgICAgICAgPlxuICAgICAgICA8L2RiLXRyZWUtY2VsbC12aWV3PlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiZWRpdF9vbiAmJiBjb2x1bW4uZWRpdGFibGVcIj5cbiAgICAgICAgPGRiLWN1c3RvbS1jZWxsLWVkaXRvci1jb21wb25lbnRcbiAgICAgICAgICAqbmdJZj1cImNvbHVtbi5lZGl0b3JcIlxuICAgICAgICAgIFtjZWxsX3ZhbHVlXT1cImNlbGxfdmFsdWVcIlxuICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgICBbcm93X2RhdGFdPVwicm93X2RhdGFcIlxuICAgICAgICAgIChjYW5jZWxlZGl0KT1cImNhbmNlbGVkaXQuZW1pdChyb3dfZGF0YVsncGF0aHgnXSlcIlxuICAgICAgICAgIChlZGl0Y29tcGxldGUpPVwib25FZGl0Q29tcGxldGUoJGV2ZW50KVwiXG4gICAgICAgID5cbiAgICAgICAgPC9kYi1jdXN0b20tY2VsbC1lZGl0b3ItY29tcG9uZW50PlxuICAgICAgICA8ZGItdHJlZS1jZWxsLWVkaXRvclxuICAgICAgICAgICpuZ0lmPVwiIWNvbHVtbi5lZGl0b3JcIlxuICAgICAgICAgIFtjZWxsX3ZhbHVlXT1cImNlbGxfdmFsdWVcIlxuICAgICAgICAgIFtyb3dfZGF0YV09XCJyb3dfZGF0YVwiXG4gICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgIFtleHBhbmRhYmxlX2NvbHVtbl09XCJ0cnVlXCJcbiAgICAgICAgICAoY2FuY2VsZWRpdCk9XCJjYW5jZWxlZGl0LmVtaXQocm93X2RhdGFbJ3BhdGh4J10pXCJcbiAgICAgICAgICAoZWRpdGNvbXBsZXRlKT1cIm9uRWRpdENvbXBsZXRlKCRldmVudClcIlxuICAgICAgICA+XG4gICAgICAgIDwvZGItdHJlZS1jZWxsLWVkaXRvcj5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIDwvZGl2PlxuICA8L25nLWNvbnRhaW5lcj5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFpc19leHBhbmRfY29sdW1uXCI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFlZGl0X29uIHx8ICFjb2x1bW4uZWRpdGFibGVcIiBbbmdTd2l0Y2hdPVwiY29sdW1uLnR5cGVcIj5cbiAgICAgIDxkYi1jdXN0b20tY2VsbC1jb21wb25lbnRcbiAgICAgICAgKm5nU3dpdGNoQ2FzZT1cIidjdXN0b20nXCJcbiAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICBbcm93X2RhdGFdPVwicm93X2RhdGFcIlxuICAgICAgPlxuICAgICAgPC9kYi1jdXN0b20tY2VsbC1jb21wb25lbnQ+XG4gICAgICA8ZGItdHJlZS1jZWxsLXZpZXdcbiAgICAgICAgKm5nU3dpdGNoRGVmYXVsdFxuICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gICAgICAgIFtyb3dfZGF0YV09XCJyb3dfZGF0YVwiXG4gICAgICA+XG4gICAgICA8L2RiLXRyZWUtY2VsbC12aWV3PlxuICAgIDwvbmctY29udGFpbmVyPlxuXG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImVkaXRfb24gJiYgY29sdW1uLmVkaXRhYmxlXCI+XG4gICAgICA8ZGItY3VzdG9tLWNlbGwtZWRpdG9yLWNvbXBvbmVudFxuICAgICAgICAqbmdJZj1cImNvbHVtbi5lZGl0b3JcIlxuICAgICAgICBbY2VsbF92YWx1ZV09XCJjZWxsX3ZhbHVlXCJcbiAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICBbcm93X2RhdGFdPVwicm93X2RhdGFcIlxuICAgICAgICAoY2FuY2VsZWRpdCk9XCJjYW5jZWxlZGl0LmVtaXQocm93X2RhdGFbJ3BhdGh4J10pXCJcbiAgICAgICAgKGVkaXRjb21wbGV0ZSk9XCJvbkVkaXRDb21wbGV0ZSgkZXZlbnQpXCJcbiAgICAgID5cbiAgICAgIDwvZGItY3VzdG9tLWNlbGwtZWRpdG9yLWNvbXBvbmVudD5cbiAgICAgIDxkYi10cmVlLWNlbGwtZWRpdG9yXG4gICAgICAgICpuZ0lmPVwiIWNvbHVtbi5lZGl0b3JcIlxuICAgICAgICBbY2VsbF92YWx1ZV09XCJjZWxsX3ZhbHVlXCJcbiAgICAgICAgW3Jvd19kYXRhXT1cInJvd19kYXRhXCJcbiAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICBbZXhwYW5kYWJsZV9jb2x1bW5dPVwiZmFsc2VcIlxuICAgICAgICAoY2FuY2VsZWRpdCk9XCJjYW5jZWxlZGl0LmVtaXQocm93X2RhdGFbJ3BhdGh4J10pXCJcbiAgICAgICAgKGVkaXRjb21wbGV0ZSk9XCJvbkVkaXRDb21wbGV0ZSgkZXZlbnQpXCJcbiAgICAgID5cbiAgICAgIDwvZGItdHJlZS1jZWxsLWVkaXRvcj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgPC9uZy1jb250YWluZXI+XG48L2Rpdj5cbiJdfQ==