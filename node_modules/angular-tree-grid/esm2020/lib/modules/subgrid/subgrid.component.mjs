import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../tree-cell/components/tree-cell-actions/tree-cell-actions.component";
import * as i2 from "../tree-cell/tree-cell.component";
import * as i3 from "./components/subgrid-head/subgrid-head.component";
import * as i4 from "./components/subgrid-body/subgrid-body.component";
import * as i5 from "@angular/common";
export class SubgridComponent {
    constructor() { }
    ngOnInit() { }
    saveRecord($event) {
        const element = $event.data;
        if (this.configs.actions.resolve_edit) {
            const promise = new Promise((resolve, reject) => {
                this.rowsave.emit({
                    data: element,
                    resolve: resolve
                });
            });
            promise.then(() => {
                this.checkAndRefreshData(element);
            }).catch((err) => { });
        }
        else {
            this.checkAndRefreshData(element);
            this.rowsave.emit(element);
        }
    }
    checkAndRefreshData(element) {
        this.edit_tracker[element[this.configs.id_field]] = false;
        this.internal_configs.show_parent_col = false;
        // Only refresh if Parent has been changed.
        if (this.internal_configs.current_edited_row[this.configs.parent_id_field]
            !== element[this.configs.parent_id_field]) {
            this.refreshData(element);
        }
    }
    refreshData(element) {
        // If edit parent is not true then don't refresh.
        if (!this.configs.actions.edit_parent) {
            return;
        }
        element[this.configs.parent_id_field] = parseInt(element[this.configs.parent_id_field], 10);
        this.expand_tracker = {};
        this.edit_tracker = {};
        this.store.processData(this.store.getRawData(), this.expand_tracker, this.configs, this.edit_tracker, this.internal_configs);
    }
    cancelEdit(row_data) {
        const index = row_data[this.configs.id_field];
        // Cancel all changes ie copy from back up.
        Object.assign(row_data, this.internal_configs.current_edited_row);
        this.edit_tracker[index] = false;
        this.internal_configs.show_parent_col = false;
    }
    onRowExpand(event) {
        const row_data = event.data;
        const promise = new Promise((resolve, reject) => {
            this.expand.emit({
                data: row_data,
                resolve: resolve
            });
        });
        this.expand_tracker[row_data.pathx] = true;
        const blank_row = this.store.showBlankRow(row_data);
        blank_row.loading_children = true;
        // Add Child rows to the table.
        promise.then((child_rows) => {
            blank_row.loading_children = false;
            if (child_rows) {
                child_rows.map(child => {
                    child.leaf = true;
                });
                blank_row.children = child_rows;
            }
            else {
                // Persist old children. If didn't exist then assign blank array.
                if (!blank_row.children) {
                    blank_row.children = [];
                }
            }
        }).catch((err) => { });
    }
    onRowCollapse(event) {
        const row_data = event.data;
        this.expand_tracker[row_data.pathx] = false;
    }
    selectRowOnCheck(row_data, event) {
        if (event.target.checked) {
            row_data.row_selected = true;
            this.rowselect.emit({ data: row_data, event: event });
        }
        else {
            row_data.row_selected = false;
            this.rowdeselect.emit({ data: row_data, event: event });
        }
        this.setSelectAllConfig();
    }
    /**
     * Set Select All config on Select change.
     *
     */
    setSelectAllConfig() {
        let select_all = true;
        this.store.getDisplayData().forEach(data => {
            if (!data.row_selected) {
                select_all = false;
            }
        });
        this.internal_configs.all_selected = select_all;
    }
}
SubgridComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: SubgridComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SubgridComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.1", type: SubgridComponent, selector: "[db-subgrid]", inputs: { store: "store", configs: "configs", expand_tracker: "expand_tracker", edit_tracker: "edit_tracker", internal_configs: "internal_configs", row_data: "row_data", cellclick: "cellclick", expand: "expand", rowselect: "rowselect", rowdeselect: "rowdeselect", rowsave: "rowsave", rowdelete: "rowdelete" }, ngImport: i0, template: "<ng-container *ngIf=\"expand_tracker[row_data.parent_pathx]\">\n\n  <!-- Expandable Row -->\n  <ng-container *ngIf=\"!row_data.leaf\">\n    <td *ngIf=\"configs.multi_select\" class=\"checkbox_column\">\n      <input type=\"checkbox\" [checked]=\"row_data.row_selected\" (click)=\"selectRowOnCheck(row_data, $event)\" \n        [attr.disabled]=\"row_data.selection_disabled\">\n    </td>\n    <td db-tree-cell-actions \n      *ngIf=\"(configs.actions.edit || configs.actions.delete || configs.actions.add)\"\n      [row_data]=\"row_data\"\n      [configs]=\"configs\"\n      [store]=\"store\"\n      [edit_tracker]=\"edit_tracker\"\n      [internal_configs]=\"internal_configs\"\n      [rowdelete]=\"rowdelete\"\n      (canceledit)=\"cancelEdit($event)\" \n      (editcomplete)=\"saveRecord($event)\"\n      >\n    </td>\n    <td *ngFor=\"let column of configs.columns; index as i\" \n      [ngClass]=\"{'column-hide': column.hidden, 'expand-column': i == 0}\">\n      <db-tree-cell\n        [configs]=\"configs\"\n        [column]=\"column\"\n        [index]=\"i\"\n        [row_data]=\"row_data\"\n        [expand_tracker]=\"expand_tracker\"\n        [edit_on]=\"edit_tracker[row_data[configs.id_field]]\"\n        [cellclick]=\"cellclick\"\n        (rowexpand)=\"onRowExpand($event)\"\n        (rowcollapse)=\"onRowCollapse($event)\"\n        (editcomplete)=\"saveRecord($event)\"\n      >\n      </db-tree-cell>\n    </td>\n  </ng-container>\n\n  <!-- Subgrid Rows -->\n  <ng-container *ngIf=\"row_data.leaf\">    \n    <td *ngIf=\"configs.multi_select\"></td>\n    <td *ngIf=\"(configs.actions.edit || configs.actions.delete || configs.actions.add)\"></td>\n    <td [attr.colspan]=\"configs.columns.length\" class=\"subgrid-column\">\n        <table class=\"subgrid-table\">\n          <thead db-subgrid-head\n            [row_data]=\"row_data\"\n            [configs]=\"configs\">\n            \n          </thead>\n          <tbody db-subgrid-body\n            [configs]=\"configs\"\n            [expand_tracker]=\"expand_tracker\"\n            [cellclick]=\"cellclick\"\n            [row_data]=\"row_data\">\n          </tbody>            \n        </table>\n    </td>    \n  </ng-container>  \n</ng-container>", styles: ["tr{border-bottom:1px solid #cdd5dc}tr.selected{background-color:#e2e7eb}tr span.parent_container{padding-left:45px}tr.child{background:#fff}tr.child td:nth-child(2){padding:.875rem 1.25rem .875rem 2.5rem!important}tr.parent{background:#fafbff}tr.subgrid-row{background:#fcfcfc}tr td{vertical-align:middle;position:relative;padding:.5rem;box-sizing:border-box}tr td.checkbox_column{text-align:center}tr td.expand-column{padding:.3rem}tr td.column-hide{display:none}tr td.clear-left-border{border-left:0!important}tr td.clear-right-border{border-right:0!important}tr td select{padding:5px;border:1px solid #d1cece}.db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}tr{border-bottom:1px solid #cdd5dc;background:#fff}tr th{font-size:1rem;font-weight:600;line-height:1.25;color:#181818;vertical-align:middle;position:relative;box-sizing:border-box}tr th div{padding:.5rem}tr th.column-hide{display:none}tr th.action-column span.icon-container{cursor:pointer}tr th span.inbuild-icon{font-size:25px}th.clear-left-border{border-left:0!important}th.clear-right-border{border-right:0!important}.column-hide{display:none}svg{width:25px;padding-right:3px}td{border:1px solid #cdd5dc;vertical-align:middle;position:relative;padding:.5rem;box-sizing:border-box}td.checkbox_column{text-align:center}td.expand-column{padding:.3rem}td.subgrid-column{padding:0}td.column-hide{display:none}td.clear-left-border{border-left:0!important}td.clear-right-border{border-right:0!important}td table.subgrid-table{border-collapse:collapse;width:100%}\n"], components: [{ type: i1.TreeCellActionsComponent, selector: "[db-tree-cell-actions]", inputs: ["store", "edit_tracker", "internal_configs", "configs", "rowdelete", "row_data"], outputs: ["editcomplete", "canceledit"] }, { type: i2.TreeCellComponent, selector: "db-tree-cell", inputs: ["configs", "index", "row_data", "column", "expand_tracker", "cellclick", "edit_on"], outputs: ["rowexpand", "rowcollapse", "canceledit", "editcomplete"] }, { type: i3.SubgridHeadComponent, selector: "[db-subgrid-head]", inputs: ["configs", "row_data"] }, { type: i4.SubgridBodyComponent, selector: "[db-subgrid-body]", inputs: ["configs", "expand_tracker", "row_data", "cellclick"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: SubgridComponent, decorators: [{
            type: Component,
            args: [{ selector: '[db-subgrid]', template: "<ng-container *ngIf=\"expand_tracker[row_data.parent_pathx]\">\n\n  <!-- Expandable Row -->\n  <ng-container *ngIf=\"!row_data.leaf\">\n    <td *ngIf=\"configs.multi_select\" class=\"checkbox_column\">\n      <input type=\"checkbox\" [checked]=\"row_data.row_selected\" (click)=\"selectRowOnCheck(row_data, $event)\" \n        [attr.disabled]=\"row_data.selection_disabled\">\n    </td>\n    <td db-tree-cell-actions \n      *ngIf=\"(configs.actions.edit || configs.actions.delete || configs.actions.add)\"\n      [row_data]=\"row_data\"\n      [configs]=\"configs\"\n      [store]=\"store\"\n      [edit_tracker]=\"edit_tracker\"\n      [internal_configs]=\"internal_configs\"\n      [rowdelete]=\"rowdelete\"\n      (canceledit)=\"cancelEdit($event)\" \n      (editcomplete)=\"saveRecord($event)\"\n      >\n    </td>\n    <td *ngFor=\"let column of configs.columns; index as i\" \n      [ngClass]=\"{'column-hide': column.hidden, 'expand-column': i == 0}\">\n      <db-tree-cell\n        [configs]=\"configs\"\n        [column]=\"column\"\n        [index]=\"i\"\n        [row_data]=\"row_data\"\n        [expand_tracker]=\"expand_tracker\"\n        [edit_on]=\"edit_tracker[row_data[configs.id_field]]\"\n        [cellclick]=\"cellclick\"\n        (rowexpand)=\"onRowExpand($event)\"\n        (rowcollapse)=\"onRowCollapse($event)\"\n        (editcomplete)=\"saveRecord($event)\"\n      >\n      </db-tree-cell>\n    </td>\n  </ng-container>\n\n  <!-- Subgrid Rows -->\n  <ng-container *ngIf=\"row_data.leaf\">    \n    <td *ngIf=\"configs.multi_select\"></td>\n    <td *ngIf=\"(configs.actions.edit || configs.actions.delete || configs.actions.add)\"></td>\n    <td [attr.colspan]=\"configs.columns.length\" class=\"subgrid-column\">\n        <table class=\"subgrid-table\">\n          <thead db-subgrid-head\n            [row_data]=\"row_data\"\n            [configs]=\"configs\">\n            \n          </thead>\n          <tbody db-subgrid-body\n            [configs]=\"configs\"\n            [expand_tracker]=\"expand_tracker\"\n            [cellclick]=\"cellclick\"\n            [row_data]=\"row_data\">\n          </tbody>            \n        </table>\n    </td>    \n  </ng-container>  \n</ng-container>", styles: ["tr{border-bottom:1px solid #cdd5dc}tr.selected{background-color:#e2e7eb}tr span.parent_container{padding-left:45px}tr.child{background:#fff}tr.child td:nth-child(2){padding:.875rem 1.25rem .875rem 2.5rem!important}tr.parent{background:#fafbff}tr.subgrid-row{background:#fcfcfc}tr td{vertical-align:middle;position:relative;padding:.5rem;box-sizing:border-box}tr td.checkbox_column{text-align:center}tr td.expand-column{padding:.3rem}tr td.column-hide{display:none}tr td.clear-left-border{border-left:0!important}tr td.clear-right-border{border-right:0!important}tr td select{padding:5px;border:1px solid #d1cece}.db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}tr{border-bottom:1px solid #cdd5dc;background:#fff}tr th{font-size:1rem;font-weight:600;line-height:1.25;color:#181818;vertical-align:middle;position:relative;box-sizing:border-box}tr th div{padding:.5rem}tr th.column-hide{display:none}tr th.action-column span.icon-container{cursor:pointer}tr th span.inbuild-icon{font-size:25px}th.clear-left-border{border-left:0!important}th.clear-right-border{border-right:0!important}.column-hide{display:none}svg{width:25px;padding-right:3px}td{border:1px solid #cdd5dc;vertical-align:middle;position:relative;padding:.5rem;box-sizing:border-box}td.checkbox_column{text-align:center}td.expand-column{padding:.3rem}td.subgrid-column{padding:0}td.column-hide{display:none}td.clear-left-border{border-left:0!important}td.clear-right-border{border-right:0!important}td table.subgrid-table{border-collapse:collapse;width:100%}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { store: [{
                type: Input
            }], configs: [{
                type: Input
            }], expand_tracker: [{
                type: Input
            }], edit_tracker: [{
                type: Input
            }], internal_configs: [{
                type: Input
            }], row_data: [{
                type: Input
            }], cellclick: [{
                type: Input
            }], expand: [{
                type: Input
            }], rowselect: [{
                type: Input
            }], rowdeselect: [{
                type: Input
            }], rowsave: [{
                type: Input
            }], rowdelete: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,