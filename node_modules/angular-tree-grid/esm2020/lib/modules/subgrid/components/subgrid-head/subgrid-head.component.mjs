import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class SubgridHeadComponent {
    constructor() { }
    ngOnInit() {
    }
    sortColumn(row_data, column) {
        const sort_by = column.name;
        // If already sorted then reverse.
        column.sort_type = column.sorted ? !column.sort_type : 1;
        column.sorted = 1;
        column.sort_type ? row_data.children.sort((a, b) => (a[sort_by] > b[sort_by]) ? 1 : ((b[sort_by] > a[sort_by]) ? -1 : 0)) :
            row_data.children.sort((a, b) => (a[sort_by] < b[sort_by]) ? 1 : ((b[sort_by] < a[sort_by]) ? -1 : 0));
    }
}
SubgridHeadComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: SubgridHeadComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SubgridHeadComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.1", type: SubgridHeadComponent, selector: "[db-subgrid-head]", inputs: { configs: "configs", row_data: "row_data" }, ngImport: i0, template: "<tr>\n  <th *ngFor=\"let column of configs.subgrid_config.columns\"\n    (click)=\"sortColumn(row_data, column)\" width=\"{{column.width ? column.width : 'auto'}}\"\n    [ngClass]=\"{'sorted': column.sorted,'sortable': column.sortable, 'column-hide': column.hidden}\">\n    {{column.header}}\n    <span *ngIf=\"column.sortable\" [ngClass]=\"column.sorted && column.sort_type == 0?'arrow-down active':'arrow-down'\"></span>\n    <span *ngIf=\"column.sortable\" [ngClass]=\"column.sorted && column.sort_type == 1?'arrow-up active':'arrow-up'\"></span>\n  </th>\n</tr>", styles: [".db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}tr{border-bottom:1px solid #cdd5dc;background:#fff}tr th{font-size:1rem;font-weight:600;line-height:1.25;color:#181818;vertical-align:middle;position:relative;box-sizing:border-box}tr th div{padding:.5rem}tr th.column-hide{display:none}tr th.action-column span.icon-container{cursor:pointer}tr th span.inbuild-icon{font-size:25px}th.clear-left-border{border-left:0!important}th.clear-right-border{border-right:0!important}.column-hide{display:none}svg{width:25px;padding-right:3px}th.sortable{cursor:pointer}th.sortable:hover span.arrow-up{border-bottom:6px solid #afafaf}th.sortable:hover span.arrow-down{border-top:6px solid #afafaf}th span.arrow-up{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-bottom:6px solid #ddd;position:relative;top:-18px}th span.arrow-up.active{border-bottom:6px solid #8a8989!important}th span.arrow-down{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:6px solid #ddd;position:relative;left:10px;top:17px}th span.arrow-down.active{border-top:6px solid #8a8989!important}\n"], directives: [{ type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: SubgridHeadComponent, decorators: [{
            type: Component,
            args: [{ selector: '[db-subgrid-head]', template: "<tr>\n  <th *ngFor=\"let column of configs.subgrid_config.columns\"\n    (click)=\"sortColumn(row_data, column)\" width=\"{{column.width ? column.width : 'auto'}}\"\n    [ngClass]=\"{'sorted': column.sorted,'sortable': column.sortable, 'column-hide': column.hidden}\">\n    {{column.header}}\n    <span *ngIf=\"column.sortable\" [ngClass]=\"column.sorted && column.sort_type == 0?'arrow-down active':'arrow-down'\"></span>\n    <span *ngIf=\"column.sortable\" [ngClass]=\"column.sorted && column.sort_type == 1?'arrow-up active':'arrow-up'\"></span>\n  </th>\n</tr>", styles: [".db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}tr{border-bottom:1px solid #cdd5dc;background:#fff}tr th{font-size:1rem;font-weight:600;line-height:1.25;color:#181818;vertical-align:middle;position:relative;box-sizing:border-box}tr th div{padding:.5rem}tr th.column-hide{display:none}tr th.action-column span.icon-container{cursor:pointer}tr th span.inbuild-icon{font-size:25px}th.clear-left-border{border-left:0!important}th.clear-right-border{border-right:0!important}.column-hide{display:none}svg{width:25px;padding-right:3px}th.sortable{cursor:pointer}th.sortable:hover span.arrow-up{border-bottom:6px solid #afafaf}th.sortable:hover span.arrow-down{border-top:6px solid #afafaf}th span.arrow-up{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-bottom:6px solid #ddd;position:relative;top:-18px}th span.arrow-up.active{border-bottom:6px solid #8a8989!important}th span.arrow-down{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:6px solid #ddd;position:relative;left:10px;top:17px}th span.arrow-down.active{border-top:6px solid #8a8989!important}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { configs: [{
                type: Input
            }], row_data: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JpZC1oZWFkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItdHJlZS1ncmlkL3NyYy9saWIvbW9kdWxlcy9zdWJncmlkL2NvbXBvbmVudHMvc3ViZ3JpZC1oZWFkL3N1YmdyaWQtaGVhZC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyLXRyZWUtZ3JpZC9zcmMvbGliL21vZHVsZXMvc3ViZ3JpZC9jb21wb25lbnRzL3N1YmdyaWQtaGVhZC9zdWJncmlkLWhlYWQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQVF6RCxNQUFNLE9BQU8sb0JBQW9CO0lBTy9CLGdCQUFnQixDQUFDO0lBRWpCLFFBQVE7SUFDUixDQUFDO0lBRUQsVUFBVSxDQUFDLFFBQVEsRUFBRSxNQUFNO1FBQ3pCLE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFFNUIsa0NBQWtDO1FBQ2xDLE1BQU0sQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDekQsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFFbEIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3pILFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0csQ0FBQzs7aUhBckJVLG9CQUFvQjtxR0FBcEIsb0JBQW9CLCtHQ1JqQyx1akJBUUs7MkZEQVEsb0JBQW9CO2tCQUxoQyxTQUFTOytCQUNFLG1CQUFtQjswRUFNN0IsT0FBTztzQkFETixLQUFLO2dCQUlOLFFBQVE7c0JBRFAsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uZmlncyB9IGZyb20gJy4uLy4uLy4uLy4uL21vZGVscy9Db25maWdzLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnW2RiLXN1YmdyaWQtaGVhZF0nLFxuICB0ZW1wbGF0ZVVybDogJy4vc3ViZ3JpZC1oZWFkLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vc3ViZ3JpZC1oZWFkLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgU3ViZ3JpZEhlYWRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKVxuICBjb25maWdzOiBDb25maWdzO1xuXG4gIEBJbnB1dCgpXG4gIHJvd19kYXRhOiBhbnk7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG4gIHNvcnRDb2x1bW4ocm93X2RhdGEsIGNvbHVtbikge1xuICAgIGNvbnN0IHNvcnRfYnkgPSBjb2x1bW4ubmFtZTtcblxuICAgIC8vIElmIGFscmVhZHkgc29ydGVkIHRoZW4gcmV2ZXJzZS5cbiAgICBjb2x1bW4uc29ydF90eXBlID0gY29sdW1uLnNvcnRlZCA/ICFjb2x1bW4uc29ydF90eXBlIDogMTtcbiAgICBjb2x1bW4uc29ydGVkID0gMTtcblxuICAgIGNvbHVtbi5zb3J0X3R5cGUgPyByb3dfZGF0YS5jaGlsZHJlbi5zb3J0KChhLCBiKSA9PiAoYVtzb3J0X2J5XSA+IGJbc29ydF9ieV0pID8gMSA6ICgoYltzb3J0X2J5XSA+IGFbc29ydF9ieV0pID8gLTEgOiAwKSkgOlxuICAgICAgcm93X2RhdGEuY2hpbGRyZW4uc29ydCgoYSwgYikgPT4gKGFbc29ydF9ieV0gPCBiW3NvcnRfYnldKSA/IDEgOiAoKGJbc29ydF9ieV0gPCBhW3NvcnRfYnldKSA/IC0xIDogMCkpO1xuICB9XG5cbn1cbiIsIjx0cj5cbiAgPHRoICpuZ0Zvcj1cImxldCBjb2x1bW4gb2YgY29uZmlncy5zdWJncmlkX2NvbmZpZy5jb2x1bW5zXCJcbiAgICAoY2xpY2spPVwic29ydENvbHVtbihyb3dfZGF0YSwgY29sdW1uKVwiIHdpZHRoPVwie3tjb2x1bW4ud2lkdGggPyBjb2x1bW4ud2lkdGggOiAnYXV0byd9fVwiXG4gICAgW25nQ2xhc3NdPVwieydzb3J0ZWQnOiBjb2x1bW4uc29ydGVkLCdzb3J0YWJsZSc6IGNvbHVtbi5zb3J0YWJsZSwgJ2NvbHVtbi1oaWRlJzogY29sdW1uLmhpZGRlbn1cIj5cbiAgICB7e2NvbHVtbi5oZWFkZXJ9fVxuICAgIDxzcGFuICpuZ0lmPVwiY29sdW1uLnNvcnRhYmxlXCIgW25nQ2xhc3NdPVwiY29sdW1uLnNvcnRlZCAmJiBjb2x1bW4uc29ydF90eXBlID09IDA/J2Fycm93LWRvd24gYWN0aXZlJzonYXJyb3ctZG93bidcIj48L3NwYW4+XG4gICAgPHNwYW4gKm5nSWY9XCJjb2x1bW4uc29ydGFibGVcIiBbbmdDbGFzc109XCJjb2x1bW4uc29ydGVkICYmIGNvbHVtbi5zb3J0X3R5cGUgPT0gMT8nYXJyb3ctdXAgYWN0aXZlJzonYXJyb3ctdXAnXCI+PC9zcGFuPlxuICA8L3RoPlxuPC90cj4iXX0=