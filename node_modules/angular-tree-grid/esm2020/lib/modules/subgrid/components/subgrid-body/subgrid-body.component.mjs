import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../../tree-cell/tree-cell.component";
import * as i2 from "@angular/common";
export class SubgridBodyComponent {
    constructor() { }
    ngOnInit() {
    }
}
SubgridBodyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: SubgridBodyComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SubgridBodyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.1", type: SubgridBodyComponent, selector: "[db-subgrid-body]", inputs: { configs: "configs", expand_tracker: "expand_tracker", row_data: "row_data", cellclick: "cellclick" }, ngImport: i0, template: "<ng-container *ngIf=\"row_data.loading_children\">\n  <tr>\n    <td [attr.colspan]=\"configs.subgrid_config.columns.length\" \n      [innerHTML]=\"configs.subgrid_config.data_loading_text\"\n      class=\"subgrid-loading-text\"></td>\n  </tr>\n</ng-container>\n<ng-container *ngIf=\"!row_data.loading_children\">\n  <tr *ngFor=\"let child_data of row_data.children\">\n    <td *ngFor=\"let column of configs.subgrid_config.columns; index as i\">\n      <db-tree-cell\n        [configs]=\"configs\"\n        [column]=\"column\"\n        [index]=\"1\"\n        [row_data]=\"child_data\"\n        [expand_tracker]=\"expand_tracker\"\n        [cellclick]=\"cellclick\"\n      ></db-tree-cell>\n    </td>\n  </tr>\n  <tr *ngIf=\"configs.subgrid_config.show_summary_row\">\n    <td *ngFor=\"let column of configs.subgrid_config.columns\">\n      <div [innerHTML]=\"column.summary_renderer && column.summary_renderer(row_data.children)\"></div>\n    </td>\n  </tr>\n</ng-container>", styles: [".db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}tr{border-bottom:1px solid #cdd5dc}tr.selected{background-color:#e2e7eb}tr span.parent_container{padding-left:45px}tr.child{background:#fff}tr.child td:nth-child(2){padding:.875rem 1.25rem .875rem 2.5rem!important}tr.parent{background:#fafbff}tr.subgrid-row{background:#fcfcfc}tr td{vertical-align:middle;position:relative;padding:.5rem;box-sizing:border-box}tr td.checkbox_column{text-align:center}tr td.expand-column{padding:.3rem}tr td.column-hide{display:none}tr td.clear-left-border{border-left:0!important}tr td.clear-right-border{border-right:0!important}tr td select{padding:5px;border:1px solid #d1cece}td.subgrid-loading-text{text-align:center}\n"], components: [{ type: i1.TreeCellComponent, selector: "db-tree-cell", inputs: ["configs", "index", "row_data", "column", "expand_tracker", "cellclick", "edit_on"], outputs: ["rowexpand", "rowcollapse", "canceledit", "editcomplete"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: SubgridBodyComponent, decorators: [{
            type: Component,
            args: [{ selector: '[db-subgrid-body]', template: "<ng-container *ngIf=\"row_data.loading_children\">\n  <tr>\n    <td [attr.colspan]=\"configs.subgrid_config.columns.length\" \n      [innerHTML]=\"configs.subgrid_config.data_loading_text\"\n      class=\"subgrid-loading-text\"></td>\n  </tr>\n</ng-container>\n<ng-container *ngIf=\"!row_data.loading_children\">\n  <tr *ngFor=\"let child_data of row_data.children\">\n    <td *ngFor=\"let column of configs.subgrid_config.columns; index as i\">\n      <db-tree-cell\n        [configs]=\"configs\"\n        [column]=\"column\"\n        [index]=\"1\"\n        [row_data]=\"child_data\"\n        [expand_tracker]=\"expand_tracker\"\n        [cellclick]=\"cellclick\"\n      ></db-tree-cell>\n    </td>\n  </tr>\n  <tr *ngIf=\"configs.subgrid_config.show_summary_row\">\n    <td *ngFor=\"let column of configs.subgrid_config.columns\">\n      <div [innerHTML]=\"column.summary_renderer && column.summary_renderer(row_data.children)\"></div>\n    </td>\n  </tr>\n</ng-container>", styles: [".db-tree-view{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all;color:#4b4b4b}tr{border-bottom:1px solid #cdd5dc}tr.selected{background-color:#e2e7eb}tr span.parent_container{padding-left:45px}tr.child{background:#fff}tr.child td:nth-child(2){padding:.875rem 1.25rem .875rem 2.5rem!important}tr.parent{background:#fafbff}tr.subgrid-row{background:#fcfcfc}tr td{vertical-align:middle;position:relative;padding:.5rem;box-sizing:border-box}tr td.checkbox_column{text-align:center}tr td.expand-column{padding:.3rem}tr td.column-hide{display:none}tr td.clear-left-border{border-left:0!important}tr td.clear-right-border{border-right:0!important}tr td select{padding:5px;border:1px solid #d1cece}td.subgrid-loading-text{text-align:center}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { configs: [{
                type: Input
            }], expand_tracker: [{
                type: Input
            }], row_data: [{
                type: Input
            }], cellclick: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JpZC1ib2R5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItdHJlZS1ncmlkL3NyYy9saWIvbW9kdWxlcy9zdWJncmlkL2NvbXBvbmVudHMvc3ViZ3JpZC1ib2R5L3N1YmdyaWQtYm9keS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyLXRyZWUtZ3JpZC9zcmMvbGliL21vZHVsZXMvc3ViZ3JpZC9jb21wb25lbnRzL3N1YmdyaWQtYm9keS9zdWJncmlkLWJvZHkuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQWdCLE1BQU0sZUFBZSxDQUFDOzs7O0FBUXZFLE1BQU0sT0FBTyxvQkFBb0I7SUFhL0IsZ0JBQWdCLENBQUM7SUFFakIsUUFBUTtJQUNSLENBQUM7O2lIQWhCVSxvQkFBb0I7cUdBQXBCLG9CQUFvQix5S0NSakMsZzlCQXlCZTsyRkRqQkYsb0JBQW9CO2tCQUxoQyxTQUFTOytCQUNFLG1CQUFtQjswRUFNN0IsT0FBTztzQkFETixLQUFLO2dCQUlOLGNBQWM7c0JBRGIsS0FBSztnQkFJTixRQUFRO3NCQURQLEtBQUs7Z0JBSU4sU0FBUztzQkFEUixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZ3MgfSBmcm9tICcuLi8uLi8uLi8uLi9tb2RlbHMvQ29uZmlncy5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1tkYi1zdWJncmlkLWJvZHldJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3N1YmdyaWQtYm9keS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3N1YmdyaWQtYm9keS5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIFN1YmdyaWRCb2R5Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KClcbiAgY29uZmlnczogQ29uZmlncztcblxuICBASW5wdXQoKVxuICBleHBhbmRfdHJhY2tlcjogYW55O1xuXG4gIEBJbnB1dCgpXG4gIHJvd19kYXRhOiBhbnk7XG5cbiAgQElucHV0KClcbiAgY2VsbGNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJyb3dfZGF0YS5sb2FkaW5nX2NoaWxkcmVuXCI+XG4gIDx0cj5cbiAgICA8dGQgW2F0dHIuY29sc3Bhbl09XCJjb25maWdzLnN1YmdyaWRfY29uZmlnLmNvbHVtbnMubGVuZ3RoXCIgXG4gICAgICBbaW5uZXJIVE1MXT1cImNvbmZpZ3Muc3ViZ3JpZF9jb25maWcuZGF0YV9sb2FkaW5nX3RleHRcIlxuICAgICAgY2xhc3M9XCJzdWJncmlkLWxvYWRpbmctdGV4dFwiPjwvdGQ+XG4gIDwvdHI+XG48L25nLWNvbnRhaW5lcj5cbjxuZy1jb250YWluZXIgKm5nSWY9XCIhcm93X2RhdGEubG9hZGluZ19jaGlsZHJlblwiPlxuICA8dHIgKm5nRm9yPVwibGV0IGNoaWxkX2RhdGEgb2Ygcm93X2RhdGEuY2hpbGRyZW5cIj5cbiAgICA8dGQgKm5nRm9yPVwibGV0IGNvbHVtbiBvZiBjb25maWdzLnN1YmdyaWRfY29uZmlnLmNvbHVtbnM7IGluZGV4IGFzIGlcIj5cbiAgICAgIDxkYi10cmVlLWNlbGxcbiAgICAgICAgW2NvbmZpZ3NdPVwiY29uZmlnc1wiXG4gICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgW2luZGV4XT1cIjFcIlxuICAgICAgICBbcm93X2RhdGFdPVwiY2hpbGRfZGF0YVwiXG4gICAgICAgIFtleHBhbmRfdHJhY2tlcl09XCJleHBhbmRfdHJhY2tlclwiXG4gICAgICAgIFtjZWxsY2xpY2tdPVwiY2VsbGNsaWNrXCJcbiAgICAgID48L2RiLXRyZWUtY2VsbD5cbiAgICA8L3RkPlxuICA8L3RyPlxuICA8dHIgKm5nSWY9XCJjb25maWdzLnN1YmdyaWRfY29uZmlnLnNob3dfc3VtbWFyeV9yb3dcIj5cbiAgICA8dGQgKm5nRm9yPVwibGV0IGNvbHVtbiBvZiBjb25maWdzLnN1YmdyaWRfY29uZmlnLmNvbHVtbnNcIj5cbiAgICAgIDxkaXYgW2lubmVySFRNTF09XCJjb2x1bW4uc3VtbWFyeV9yZW5kZXJlciAmJiBjb2x1bW4uc3VtbWFyeV9yZW5kZXJlcihyb3dfZGF0YS5jaGlsZHJlbilcIj48L2Rpdj5cbiAgICA8L3RkPlxuICA8L3RyPlxuPC9uZy1jb250YWluZXI+Il19